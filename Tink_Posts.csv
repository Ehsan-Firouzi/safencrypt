48886854,48936606,1,"<p>I've created an app on App Engine with Java Maven quickstart. But including the <a href=""https://github.com/google/tink"" rel=""nofollow noreferrer"">Tink library</a> in the dependencies and importing it the way described in its readme does not work as the library does not exist on Google Cloud and the readme is not intended for it.</p>  <p>I'm quite familiar with Java but new to Maven and GCP. How do I install the library manually?</p>  <p>UPD: The pre-built jar is available for <a href=""https://mvnrepository.com/artifact/com.google.crypto.tink/tink/1.0.0"" rel=""nofollow noreferrer"">Tink 1.0.0</a></p> ",NULL,1,NULL,2018-02-20 13:51:57.783,0,2018-05-24 16:33:32.927,2018-05-24 16:33:32.927,NULL,95810,9165398,0,1,1,<java><maven><google-app-engine><google-cloud-platform><tink>,How to install the Tink cryptographic library on Google Cloud Platform?,313
50230326,0,2,"<p>Good day, I have used google/tink to encrypt a password for storing in a DB using these steps :</p>  <pre><code>// 1. Generate the key material. KeysetHandle keysetHandle =      KeysetHandle.generateNew(AeadKeyTemplates.AES128_GCM);  // 2. Get the primitive. Aead aead = AeadFactory.getPrimitive(keysetHandle);  // 3. Use the primitive to encrypt a plaintext, byte[] ciphertext = aead.encrypt(plaintext, aad); </code></pre>  <p>It basically converts password into the bytes, but when i convert it into string to store into the DB, It stores the encrypted password in this format : <code>-�@~�k�D߶{׼�</code>.</p>  <p>But i want to store the password in the format like <code>11As7737Cs9ue9oo09</code> using tink encryption.</p>  <p>Is there any way to do it?</p> ",NULL,3,NULL,2018-05-08 09:27:45.947,0,2019-02-23 17:10:16.950,2018-06-01 17:13:18.983,NULL,373815,3199287,0,1,4,<java><password-encryption><tink>,Password encryption using google/tink,2325
50693268,0,1,"<p>I am trying to encrypt a <code>string</code> and using the <code>Google's Tink</code> library.  When I call the method <code>encrypt</code> and the encrypted string returns something like <code>\&lt;Ï~ß¾Ò0ÑP[oxRæ±E*;ÑRÂÉD«Øô§½:î</code>. I tried <code>Base64.DEFAULT</code>, <code>UTF-8</code> <code>ISO-8859-1</code>, <code>US-ASCI</code> and even <code>StandarCharset.UTF_8</code> and similar charsets but nothing works. Please help, here is the snippet.</p>  <pre><code>... KeysetHandle keysetHandle = KeysetHandle.generateNew(AeadKeyTemplates.AES256_GCM); Aead aead = AeadFactory.getPrimitive(keysetHandle); byte [] str1 = str.getBytes(""UTF-8""); ... byte [] output = aead.encrypt(str1, str2); String outputStr = new String(output, ""UTF-8""); ... </code></pre> ",NULL,4,NULL,2018-06-05 06:17:28.593,0,2018-06-06 01:42:44.950,2018-06-06 00:23:37.457,NULL,373815,9852406,0,1,1,<java><character-encoding><tink>,byte array to stream encoding issue using google tink,462
51207526,0,1,"<p>When uploading our app to the Google Play store, google's pre-launch report indicates that the app is crashing with a null pointer exception. The issue is regarding KeyStore implementation in Huawei devices only.</p>  <p>Stacktrace:</p>  <pre><code>Fatal Exception: java.lang.NullPointerException: Attempt to invoke interface method 'int android.security.IKeystoreService.del(java.lang.String, int)' on a null object reference        at android.security.KeyStore.delete(KeyStore.java:186)        at android.security.Credentials.deletePrivateKeyTypeForAlias(Credentials.java:292)        at android.security.Credentials.deleteAllTypesForAlias(Credentials.java:251)        at android.security.keystore.AndroidKeyStoreKeyPairGeneratorSpi.generateKeyPair(AndroidKeyStoreKeyPairGeneratorSpi.java:464)        at java.security.KeyPairGenerator$Delegate.generateKeyPair(KeyPairGenerator.java:699)        at com.example.utility.crypto.KeyStoreHelper.createKeys(Unknown Source)        at com.example.utility.crypto.KeyStoreHelper.createKeys(Unknown Source)        at com.example.activities.register.SplashActivity$1.run(Unknown Source)        at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:255)        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)        at java.lang.Thread.run(Thread.java:776)   </code></pre>  <p>I am using Google's <a href=""https://github.com/google/tink"" rel=""nofollow noreferrer"">Tink</a> library for Keystore implementation. Library has nothing to do with error. Error still occurs without library.</p>  <p>Below is code:</p>  <pre><code>@Throws(Exception::class) private fun getOrGenerateNewKeysetHandle(): KeysetHandle {     return AndroidKeysetManager.Builder()         .withSharedPref(this, ""KEYSET"", ""PREF"")         .withKeyTemplate(AeadKeyTemplates.AES256_GCM)         .withMasterKeyUri(REIWA_MASTER_KEY_URI)         .build()         .keysetHandle } </code></pre>  <p>I think it has to do something with the device's keystore implementation. </p>  <p>Any help will be appreciated.</p> ",NULL,6,NULL,2018-07-06 09:44:28.257,0,2018-09-06 09:32:37.747,2018-07-06 09:49:17.677,NULL,3702862,3702862,0,1,4,<android><kotlin><android-keystore><huawei-mobile-services><tink>,Android - NullPointerException in android.security.IKeystoreService.del for Huawei devices,948
52049750,52049790,2,"<p>I recently tried to add the google tink library to eclipse and it always has a ""com.google.protobuf.GeneratedMessageV3$ cannot be resolved"" error, I normally never have any problems with adding libraries to my project, and from what I can tell it has something to do with the all key template files since the error only occours when I try to generate a new KeysetHandle with any key template, and the error only starts when i enter in the key template file@ <a href=""https://github.com/Gameidite/testProject"" rel=""nofollow noreferrer"">https://github.com/Gameidite/testProject</a></p> ",NULL,0,NULL,2018-08-28 03:39:55.800,0,2018-09-06 04:18:05.190,NULL,NULL,0,7120591,0,1,0,<java><encryption><jar><compiler-errors><tink>,tink library com.google.protobuf.GeneratedMessageV3$ cannot be resolved,3318
52171198,0,1,"<p>I have a key (say) &quot;thisist0psecret&quot; that I want to use as a symmetric encryption/decryption key with the <a href=""https://github.com/google/tink"" rel=""nofollow noreferrer"">Google Tink library</a>.  I am baffled that I am unable to do this simple thing.  I can generate <strong>new keys</strong> (using various templates AES128_GCM, etc.), serialize them and then read them back with KeysetReader.  But, for the life of me, I cannot figure out how to create a symmetric key with the <strong>specific key bytes that I specify</strong>.</p> <p>I am able to do the following, for example, with Tink:</p> <pre class=""lang-java prettyprint-override""><code>KeysetHandle ksh = KeysetHandle.generateNew(AeadKeyTemplates.AES128_GCM); Aead aead = AeadFactory.getPrimitive(ksh); String pt = &quot;hello, world!&quot;; byte[] encbytes = aead.encrypt(pt.getBytes(), null); byte[] decbytes = aead.decrypt(encbytes, null); String orig = new String(decbytes); assert(pt.equals(orig)); </code></pre> <p>But I want to set the symmetric key string to be a set of bytes that I specify such as &quot;thisist0psecret&quot; and then encrypt this key with the public key of the user who will do the decryption.</p> <p>Any Google Tink experts here that can shed some light?</p> ",NULL,6,NULL,2018-09-04 17:14:57.873,0,2020-09-25 11:11:28.747,2020-08-17 02:06:25.697,NULL,1402846,10316346,0,1,9,<cryptography><tink>,How to create symmetric encryption key with Google Tink?,3800
52635043,52671185,1,"<p>I'm running into this issue on a tablet device running Android KitKat as well as on a Samsung Tab-A on Lollipop. It has worked fine on an Acer tablet running Android M.</p>  <p>Here's the failure point:</p>  <pre><code>private KeysetHandle getOrGenerateNewKeysetHandle() throws IOException, GeneralSecurityException {         return new AndroidKeysetManager.Builder()                 .withSharedPref(getApplicationContext(), TINK_KEYSET_NAME, TINK_PREF_FILE_NAME)                 .withKeyTemplate(AeadKeyTemplates.AES256_GCM) // Failure point                 .withMasterKeyUri(ANDROID_KEYSTORE_TINK_MASTER_KEY_URI)                 .build()                 .getKeysetHandle();     } </code></pre>  <p>And then I initialize my AEAD when initializing Tink:</p>  <pre><code>// google\Tink crypto try {     TinkConfig.register();     aead = AeadFactory.getPrimitive(getOrGenerateNewKeysetHandle());     Log.i(LOG_TAG, ""Tink registered.""); } catch (GeneralSecurityException | IOException e) {     e.printStackTrace();     Log.e(LOG_TAG, ""Tink failed to register or could not generate a keyset handle."");     Log.e(LOG_TAG, ""Tink failed to register: "" + e.getMessage()); } </code></pre>  <p>Either way, Tink fails to initialize with the below caught message:</p>  <pre><code>10-03 16:10:58.319 com.mycompany.myapp.debug E/MainActivity: Tink failed to register: KeyGenerator AES implementation not found </code></pre>  <p>Is there a specific KeyTemplate I can replace the below with?</p>  <pre><code>AeadKeyTemplates.AES256_GCM </code></pre>  <p>Full Stacktrace:</p>  <pre><code>10-03 17:25:45.235 com.mycompany.myapp.debug W/System.err: java.security.NoSuchAlgorithmException: KeyGenerator AES implementation not found 10-03 17:25:45.245 com.mycompany.myapp.debug W/System.err:     at org.apache.harmony.security.fortress.Engine.notFound(Engine.java:177) 10-03 17:25:45.255 com.mycompany.myapp.debug W/System.err:     at org.apache.harmony.security.fortress.Engine.getInstance(Engine.java:170) 10-03 17:25:45.255 com.mycompany.myapp.debug W/System.err:     at javax.crypto.KeyGenerator.getInstance(KeyGenerator.java:163) 10-03 17:25:45.255 com.mycompany.myapp.debug W/System.err:     at javax.crypto.KeyGenerator.getInstance(KeyGenerator.java:135) 10-03 17:25:45.255 com.mycompany.myapp.debug W/System.err:     at com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient.generateNewAeadKey(AndroidKeystoreKmsClient.java:141) 10-03 17:25:45.265 com.mycompany.myapp.debug W/System.err:     at com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient.getOrGenerateNewAeadKey(AndroidKeystoreKmsClient.java:128) 10-03 17:25:45.265 com.mycompany.myapp.debug W/System.err:     at com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder.withMasterKeyUri(AndroidKeysetManager.java:157) 10-03 17:25:45.265 com.mycompany.myapp.debug W/System.err:     at com.mycompany.myapp.MainActivity.getOrGenerateNewKeysetHandle(MainActivity.java:2520) 10-03 17:25:45.265 com.mycompany.myapp.debug W/System.err:     at com.mycompany.myapp.MainActivity.initializeRequiredAppComponents(MainActivity.java:2554) 10-03 17:25:45.265 com.mycompany.myapp.debug W/System.err:     at com.mycompany.myapp.MainActivity.onCreate(MainActivity.java:230) 10-03 17:25:45.275 com.mycompany.myapp.debug W/System.err:     at android.app.Activity.performCreate(Activity.java:5231) 10-03 17:25:45.275 com.mycompany.myapp.debug W/System.err:     at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1087) 10-03 17:25:45.275 com.mycompany.myapp.debug W/System.err:     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2159) 10-03 17:25:45.275 com.mycompany.myapp.debug W/System.err:     at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2245) 10-03 17:25:45.275 com.mycompany.myapp.debug W/System.err:     at android.app.ActivityThread.access$800(ActivityThread.java:135) 10-03 17:25:45.285 com.mycompany.myapp.debug W/System.err:     at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196) 10-03 17:25:45.285 com.mycompany.myapp.debug W/System.err:     at android.os.Handler.dispatchMessage(Handler.java:102) 10-03 17:25:45.285 com.mycompany.myapp.debug W/System.err:     at android.os.Looper.loop(Looper.java:136) 10-03 17:25:45.285 com.mycompany.myapp.debug W/System.err:     at android.app.ActivityThread.main(ActivityThread.java:5017) 10-03 17:25:45.285 com.mycompany.myapp.debug W/System.err:     at java.lang.reflect.Method.invokeNative(Native Method) 10-03 17:25:45.295 com.mycompany.myapp.debug W/System.err:     at java.lang.reflect.Method.invoke(Method.java:515) 10-03 17:25:45.295 com.mycompany.myapp.debug W/System.err:     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779) 10-03 17:25:45.295 com.mycompany.myapp.debug W/System.err:     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595) 10-03 17:25:45.295 com.mycompany.myapp.debug W/System.err:     at dalvik.system.NativeStart.main(Native Method) 10-03 17:25:45.295 com.mycompany.myapp.debug E/MainActivity: GeneralSecurityException - Tink failed to register or could not generate a keyset handle: KeyGenerator AES implementation not found 10-03 17:25:45.295 com.mycompany.myapp.debug E/MainActivity: isMDMAPISupported: Exception ignored </code></pre> ",NULL,7,NULL,2018-10-03 20:17:44.827,0,2018-10-05 18:13:03.227,2018-10-05 16:18:04.910,NULL,2340813,2340813,0,1,0,<android><tink>,Google Tink Crypto library - KeyGenerator AES implementation not found,1757
52702152,0,3,"<p>I am new to Tink and would like to extract the raw key data(in String form) from KeysetHandle which I generated like this:</p>  <pre><code>keysetHandle = KeysetHandle.generateNew(                     AeadKeyTemplates.AES128_GCM); </code></pre>  <p>Or maybe some other API to get it.</p>  <p>How can I achieve this?</p> ",NULL,0,NULL,2018-10-08 12:20:00.310,0,2019-09-11 13:51:02.653,NULL,NULL,0,2378217,0,1,4,<tink>,Google Tink: How to get raw key string from a KeysetHandle?,1845
53189287,54245652,1,"<p>When I used follow demo to encrypt key material, I got NullPointerException in AwsKmsClient().getAead() mothod. </p>  <pre><code>String masterKeyUri = ""aws-kms://arn:aws:kms:us-east-1:007084425826:key/84a65985-f868-4bfc-83c2-366618acf147""; KeysetHandle keysetHandle = KeysetHandle.read(         JsonKeysetReader.withFile(new File(keysetFilename)),         new AwsKmsClient().getAead(masterKeyUri)); </code></pre>  <p>I debuged and found AWSKMS client(<code>this.client</code>) in AwsKmsClient is <code>null</code>. </p>  <pre><code>public Aead getAead(String uri) throws GeneralSecurityException {         if (this.keyUri != null &amp;&amp; !this.keyUri.equals(uri)) {             throw new GeneralSecurityException(String.format(""this client is bound to %s, cannot load keys bound to %s"", this.keyUri, uri));         } else {             return new AwsKmsAead(this.client, Validators.validateKmsKeyUriAndRemovePrefix(""aws-kms://"", uri));         }     } </code></pre>  <p>Do you know how to deal with this problem? or how to use AWS KMS correctly?  Thanks in advance.</p> ",NULL,0,NULL,2018-11-07 12:15:08.283,0,2019-01-17 23:15:17.427,NULL,NULL,0,1901286,0,1,0,<java><tink>,Google/Tink: Use AWS KMS Key encrypt key material but get NullPointerException,539
53228475,0,4,"<p>We want to use the <a href=""https://github.com/google/tink"" rel=""noreferrer"">Tink</a> library in our project to be able to verify some incoming signatures given a public key.</p>  <p>What we have are the following:</p>  <ol> <li>The public key as a string</li> <li>The signature itself</li> <li>The plaintext</li> </ol>  <p>After going through Tink's documentation, we cannot figure out how to load the public key string so that it can be used by <code>PublicKeyVerifyFactory</code>.</p>  <p>Has anybody done anything similar? Have you found any examples online that could point us to the right direction?</p> ",NULL,3,NULL,2018-11-09 15:18:48.557,0,2019-11-18 15:39:14.283,2018-11-09 17:33:30.553,NULL,234499,234499,0,1,9,<java><cryptography><digital-signature><public-key><tink>,Google/Tink: How use public key to verify signature,3121
53367910,0,0,"<p>I've created a runnable JAR file which has a class with this code:</p>  <pre><code>static KeysetHandle keysetHandle = null;  public String encrypt(String plainText){      Config.register(AeadConfig.TINK_1_1_0);         // GENERATE key        // key generated using tink library        keysetHandle = KeysetHandle.generateNew(AeadKeyTemplates.AES256_GCM); }  public String decrypt(String cipherText){      //using the key generated during encryption to decrypt                  Aead aeadDecryption = AeadFactory.getPrimitive(keysetHandle);  }  </code></pre>  <p>In my other Java application I've imported this JAR file as an external JAR file and am trying to run these methods:</p>  <pre><code>import core.Crypto;  public class Sample {      public static void main(String[] args) {         // TODO Auto-generated method stub         Crypto crypto = new Crypto();         System.out.println(crypto.encrypt(""sampleText""));         System.out.println(crypto.decrypt(""XXX""));     } } </code></pre>  <p>The encrypt function works as expected, but the decrypt returns a <code>NullPointerException</code> because <code>keysetHandle</code> is null. How do I get the updated value for <code>keysetHandle</code>?</p> ",NULL,6,NULL,2018-11-19 03:24:51.423,0,2019-01-17 22:58:07.247,2018-11-19 16:39:27.497,NULL,9613236,9613236,0,1,0,<java><tink>,Use static variable from JAR file,589
54192091,54245446,1,"<p>I would like to use Tink in order to replace Sodium-JNI on Android. Tink seems to be great and really easy to use.  But I have one problem. In my use case I have to exchange XChaCha20Poly1305 encrypted messages with other peers and the peers only send certain parts of the nonce, not the whole 24 bytes. This shortened nonce is then used to recover/derive the complete 24 nonce bytes. That's why I would need full control over the used nonce and to set a custom nonce for encryption instead of using encryption with random nonces chosen by Tink. Is there an easy way to use my custom nonces with XChaCha20Poly1305 in Tink? </p>  <p>Thanks in advance and regards Bruno</p> ",NULL,0,NULL,2019-01-15 02:50:00.267,0,2019-01-17 22:53:43.050,2019-01-17 11:10:16.567,NULL,10914839,10914839,0,1,1,<android><encryption><tink>,Google / Tink: XChaCha20Poly1305 encryption with custom non-random nonce,244
54426283,0,1,"<p>I started exploring <strong>""Tink""</strong> recently and now stuck at a particular problem, and couldn't find the solution in docs or online. </p>  <p>The case is: <strong><em>I want to have two sets of Public/Private keypairs. One would be active and other would be disabled.</em></strong></p>  <p>What I did was to generate a <strong>KeyHandle</strong> like this and stored it in <strong>AWS KMS</strong>: </p>  <pre><code>KeysetHandle pri = KeysetHandle.generateNew(SignatureKeyTemplates.ECDSA_P256); KeysetHandle pub = privateKeySetHandle.getPublicKeysetHandle();  pri.write(JsonKeysetWriter.withFile(new File(""pri_p"")),             new AwsKmsClient().withDefaultCredentials().getAead(keyStoreUrl)); pub.write(JsonKeysetWriter.withFile(new File(""pub_p"")),             new AwsKmsClient().withDefaultCredentials().getAead(""someUrl""));  //*************** Same code for secondary **************  KeysetHandle pri = KeysetHandle.generateNew(SignatureKeyTemplates.ECDSA_P256); KeysetHandle pub = privateKeySetHandle.getPublicKeysetHandle();  pri.write(JsonKeysetWriter.withFile(new File(""pri_s"")),             new AwsKmsClient().withDefaultCredentials().getAead(keyStoreUrl)); pub.write(JsonKeysetWriter.withFile(new File(""pub_s"")),             new AwsKmsClient().withDefaultCredentials().getAead(""someUrl"")); </code></pre>  <p>I did this because I thought that I'd generate two pairs and keep them in different json files as:</p>  <ol> <li><strong>'pri-p' (primary)</strong></li> <li><strong>'pub-p' (primary)</strong></li> <li><strong>'pri-s' (secondary)</strong></li> <li><strong>'pub-s' (secondary)</strong></li> </ol>  <p>After doing this, I wrote an API which returned both public keys (primary &amp; secondary) to the client and the response was: </p>  <pre><code>({ ""primaryKeyId"": 12345, ""key"": [{     ""keyData"": {         ""typeUrl"": ""type.googleapis.com/google.crypto.tink.EcdsaPrivateKey"",         ""keyMaterialType"": ""ASYMMETRIC_PUBLIC"",         ""value"": ""IDJNVUs,csaIQDP9jhF+MERyoZ6Ede/LteBYS0n4zVbYTcuCZCiFBERhyIhAJettefH3BPjFyyZC3m90Pw+m/K8sjiEPS""     },     ""outputPrefixType"": ""TINK"",     ""keyId"": 12345,     ""status"": ""ENABLED"" }] },{ ""primaryKeyId"": 6789, ""key"": [{     ""keyData"": {         ""typeUrl"": ""type.googleapis.com/google.crypto.tink.EcdsaPublicKey"",         ""keyMaterialType"": ""ASYMMETRIC_PUBLIC"",         ""value"": ""EgYI7hfsdhfsdm0eeii3m43434334390439TcuCZCiFBERhyIhAJettefH3BPjFyyZC3m90Pw+m/K8sjiEPSXKSMgmWEgr""     },     ""outputPrefixType"": ""TINK"",     ""keyId"": 6789,     ""status"": ""ENABLED"" }] }) </code></pre>  <p>Now I wanted to make the secondary one as inactive so that nobody uses it, meaning <strong>status: DISABLED</strong> using the code as below: </p>  <pre><code>KeysetHandle secondaryPublicKey = KeysetManager             .withKeysetHandle(secondaryPublicKey)             .disable(keySetHandle.getKeysetInfo().getPrimaryKeyId())             .getKeysetHandle(); </code></pre>  <p>but I got the exception as: </p>  <pre><code>java.security.generalsecurityexception: cannot disable the primary key </code></pre>  <p>At that time, I realized that what I did was wrong, and I had to do it altogether again, so that both <strong>Keys</strong> are in the same <strong>KeysetHandle</strong> and this I am unable to do as when a KeysetHandle is created like: </p>  <pre><code>KeysetHandle pri = KeysetHandle.generateNew(SignatureKeyTemplates.ECDSA_P256); </code></pre>  <p>It's already marked as a primary key and if I retrieve the public key from this, that would also be primary key. No matter how many keys I generate, all will be marked as primary using this. </p>  <p>There's another way:</p>  <ol> <li>Create multiple <strong>Key</strong></li> <li>Add in <strong>Keyset</strong></li> <li>Mark one of them as primary</li> <li>Create <strong>KeysetHandle</strong></li> <li>Write in AWS Kms</li> </ol>  <p>But I am not sure how to go about this, or is whether it is the correct way.</p>  <p>Need some help on this, I'd really appreciate.</p> ",NULL,0,NULL,2019-01-29 17:11:57.397,0,2019-01-31 16:41:16.973,NULL,NULL,0,1503786,0,1,1,<java><authentication><encryption><rsa><tink>,Multiple private/public Key pairs in Tink,960
54638615,0,2,"<p>Has anyone implemented Cryptographic Message Syntax using Google's HSM and KMS service?</p>  <p>It is difficult to tell if this functionality is built into the <a href=""https://github.com/google/tink"" rel=""nofollow noreferrer"">Tink</a>library or not. </p>  <p>There is no Google Engine for OpenSSL or BoringSSL (would love to be corrected if not the case) and as the engine needs to be written in clang I imagine it is rather difficult to include the tink.so library?</p>  <p>If anyone has any information on performing these types of operations on Google's KMS service It would be greatly appreciated. </p> ",NULL,0,NULL,2019-02-11 20:28:28.153,0,2019-03-11 12:35:13.983,NULL,NULL,0,6848431,0,1,0,<openssl><google-cloud-kms><tink>,google-cloud-kms PKCS7 Cryptographic Message Syntax,525
54836910,0,1,"<p>I want to <a href=""https://github.com/google/tink/blob/master/docs/JAVA-HOWTO.md#storing-keysets"" rel=""nofollow noreferrer"">store a keyset</a>, and would like the file to be encrypted with key produced from a user-provided ""master password"". And of course, at a later point I'd like to, given the same master password, be able to <a href=""https://github.com/google/tink/blob/master/docs/JAVA-HOWTO.md#loading-existing-keysets"" rel=""nofollow noreferrer"">load that keyset</a> by decrypting the file.</p>  <p>It seems that I need an <code>Aead</code>, which I can generate from a <code>KeysetHandle</code> with <code>AeadFactory.getPrimitive(keysetHandle)</code>. But how can I produce a <code>KeysetHandle</code> from a ""master password""?</p>  <p>(And for the context of this question, getting that key from a Key Management Systems, instead of producing it ""out of thin air"" from a master password, isn't an option.)</p> ",NULL,0,NULL,2019-02-23 00:15:31.470,0,2019-02-25 19:05:58.710,NULL,NULL,0,5295,0,1,1,<tink>,How to generate a Tink key from a user-provided password,415
54914366,0,1,"<p>I am trying to store cleartext password in properties file and load that JSON using CleartextKeysetHandle.read</p>  <p>However, when I want to rotate the key, I would like to introduce another key which is another cleartext password. How can I load this key and add it to keymanager ?</p> ",NULL,0,NULL,2019-02-27 20:58:00.007,0,2019-03-06 17:51:13.073,NULL,NULL,0,3044440,0,1,1,<tink>,Using Symmetric keys in Tink,128
55070513,55086023,3,"<p>Until now, I was using jasypt to encrypt a string before storing it on disk on app closing, and later when opening the app for decrypt the string after retrieving it from disk.</p>  <p>It was super easy with jasypt, this was the code:</p>  <pre><code>private static final String JASYPT_PWD = ""mypassword"";  public static String encryptString(String string) {     StrongTextEncryptor textEncryptor = new StrongTextEncryptor();     textEncryptor.setPassword(JASYPT_PWD);     return textEncryptor.encrypt(string); }  public static String decryptString(String string) {     StrongTextEncryptor textEncryptor = new StrongTextEncryptor();     textEncryptor.setPassword(JASYPT_PWD);     return textEncryptor.decrypt(string); } </code></pre>  <p>It worked perfectly, but now, jasypt is deprecated and I'm trying to migrate to the <em>Google Tink</em> library, the problem is that Google Tink seems to be much more complex for just encrypt and decrypt a string as easily as with jasypt.</p>  <p>I can't find in the Tink repo readme the simple way to encrypt and decrypt a string, just can find more complex operations which in fact I can't understand because my knowledge in encryption is totally empty. Because of that I was using a very easy library like jasypt.</p>  <p>This is the Tink repo: <a href=""https://github.com/Google/tink"" rel=""noreferrer"">https://github.com/Google/tink</a></p>  <p>Is there an easy way, similar to my jasypt code, to encrypt and decrypt a string with Tink?</p> ",NULL,3,NULL,2019-03-08 20:24:53.910,0,2021-04-12 20:25:20.897,2019-11-21 10:18:55.270,NULL,40342,479886,0,1,9,<java><encryption><jasypt><keyczar><tink>,How to easily encrypt and decrypt a String using Tink?,11000
55403436,55403863,1,"<p>I'm encrypting some text and trying to decrypt it, however it's failing to decrypt when I am using a different AeadConfig.register() to decrypt than to encrypt. I'm wondering how to resolve this problem because I'll be encrypting on one activity and decrypting in another activity. I've simplified it for the sake of giving an example below.</p>  <p>This works, if I just pass the aead as a parameter, but I'm not sure if that's something I should be doing.</p>  <pre><code>private fun deletableEncrypt() {      AeadConfig.register()      val keysetHandle: KeysetHandle = KeysetHandle.generateNew(AeadKeyTemplates.AES128_GCM)     val aead: Aead = AeadFactory.getPrimitive(keysetHandle)      val plainText = ""Hello world""     val aad = ""masterpassword""      val cipherText = aead.encrypt(plainText.toByteArray(), aad.toByteArray())      Log.d(TAG, cipherText.toString())      dbHelper.insertNewRow(""text"", cipherText,         ""moreText"") }  private fun deleteableDecrypt() {      AeadConfig.register()      val keysetHandle: KeysetHandle = KeysetHandle.generateNew(AeadKeyTemplates.AES128_GCM)     val aead: Aead = AeadFactory.getPrimitive(keysetHandle)      val aad = ""masterpassword""      val cipherText = dbHelper.getAllEncrypts()[0]      val decrypted = aead.decrypt(cipherText, aad.toByteArray()) } </code></pre>  <p>Right now the decryption throws an exception. I think its' caused by the aeadConfig, but I don't know how to register it only once, so once this is solved it won't throw exception anymore.</p> ",NULL,0,NULL,2019-03-28 17:15:33.177,0,2019-03-28 17:41:55.143,NULL,NULL,0,9333933,0,1,1,<encryption><kotlin><tink>,Decryption failed after registering AeadConfig more than once?,864
55583921,55591744,3,"<p>I am new to cryptography.  I am working on a poc to encrypt and decrypt a string.  When I decrypt the encrypted string it works sometimes but other times throws Tag mismatch error. Am I missing anything?</p>  <p>Here is my code:</p>  <pre class=""lang-java prettyprint-override""><code>EncryptionServiceImpl.java  public class EncryptionServiceImpl {     private static final Logger log = LoggerFactory.getLogger(""EncryptionServiceImpl"");      private final KeysetHandle keysetHandle;     private final Aead aead;      public EncryptionServiceImpl() throws GeneralSecurityException {         AeadConfig.register();         this.keysetHandle = KeysetHandle.generateNew(AeadKeyTemplates.AES128_GCM);         aead = AeadFactory.getPrimitive(keysetHandle);     }      public String encrypt(String text) throws GeneralSecurityException {          log.info(String.format(""Encrypting %s"", text));         byte[] plainText = text.getBytes();         byte[] additionalData = ""masterkey"".getBytes();         byte[] cipherText = aead.encrypt(plainText,additionalData);          String output = new String(cipherText);          log.info(String.format(""The encrypted text: %s"", output));         return output;     }      public String decrypt(String text) throws GeneralSecurityException {          log.info(String.format(""Decrypting %s"", text));          byte[] cipherText = text.getBytes();         byte[] additionalData = ""masterkey"".getBytes();         byte[] decipheredData = aead.decrypt(cipherText,additionalData);          String output = new String(decipheredData);          log.info(String.format(""The decrypted text: %s"", output));         return output;     }  }  EncryptionServiceImplTest.java  public class EncryptionServiceImplTest {      @Test     public void encrypt() throws IOException, GeneralSecurityException {         EncryptionServiceImpl encryptionService = new EncryptionServiceImpl();         String encryptedText = encryptionService.encrypt(""Hello World"");         assertThat(encryptedText, Matchers.notNullValue());     }      @Test     public void decrypt() throws IOException, GeneralSecurityException {         EncryptionServiceImpl encryptionService = new EncryptionServiceImpl();          String encryptedText = encryptionService.encrypt(""Hello World"");         String decrypedText = encryptionService.decrypt(encryptedText);          assertThat(decrypedText, Matchers.is(""Hello World""));     } }  </code></pre>  <p>Exception: INFO: ciphertext prefix matches a key, but cannot decrypt: javax.crypto.AEADBadTagException: Tag mismatch! com.encryption.api.service.EncryptionServiceImplTest > decrypt FAILED</p>  <pre><code>java.security.GeneralSecurityException at EncryptionServiceImplTest.java:25 </code></pre>  <p>decryption failed java.security.GeneralSecurityException: decryption failed     at com.google.crypto.tink.aead.AeadFactory$1.decrypt(AeadFactory.java:109)     at com.encryption.api.service.EncryptionServiceImpl.decrypt(EncryptionServiceImpl.java:53)     at com.encryption.api.service.EncryptionServiceImplTest.decrypt(EncryptionServiceImplTest.java:25)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:498)     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)     at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)     at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)     at org.junit.runners.ParentRunner.run(ParentRunner.java:363)     at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)     at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)     at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)     at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:498)     at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)     at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)     at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)     at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)     at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)     at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:108)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:498)     at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)     at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)     at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)     at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)     at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)     at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)     at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)     at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)     at java.lang.Thread.run(Thread.java:748)</p>  <p>1 test completed, 1 failed</p> ",NULL,0,NULL,2019-04-09 01:35:47.067,0,2019-04-12 20:41:56.980,2019-04-09 01:50:41.210,NULL,1293543,1293543,0,1,0,<java><tink>,Tag Mismatch error when decrypting the key using google tink library,4604
55692186,55697675,2,"<p>I have two instances of my service that does the encryption and decryption running in cloud.  The decryption fails sometimes with 'decryption failed' error.  I guess this is because each instance has its own Aead instance.  How can i solve this issue?</p>  <pre><code>    public class Utils {         private static final Logger log = LoggerFactory.getLogger(Utils.class);         private Aead aead;         private static Utils utils;          private Utils() {             try {                 AeadConfig.register();                 KeysetHandle keysetHandle = KeysetHandle.generateNew(AeadKeyTemplates.AES128_GCM);                 aead = AeadFactory.getPrimitive(keysetHandle);             } catch (GeneralSecurityException e) {                 log.error(String.format(""Error occured: %s"",e.getMessage())).log();             }         }          public static Utils getInstance() {             if(null == utils) {                 utils = new Utils();             }         return utils;     }      public String encrypt(String text) throws GeneralSecurityException, UnsupportedEncodingException {         byte[] plainText = text.getBytes(""ISO-8859-1"");         byte[] additionalData = null;         byte[] cipherText = aead.encrypt(plainText,additionalData);          String output = Base64.getEncoder().encodeToString(cipherText);         return output;     }      public String decrypt(String text) throws GeneralSecurityException, UnsupportedEncodingException {         byte[] cipherText = Base64.getDecoder().decode(text);         byte[] additionalData = null;         byte[] decipheredData = aead.decrypt(cipherText,additionalData);          String output = new String(decipheredData,""ISO-8859-1"");         return output;     }   @Test     public void encrypt() throws IOException, GeneralSecurityException {         String encryptedText = cryptographicUtils.encrypt(""Hello World"");         assertThat(encryptedText, Matchers.notNullValue());     }      @Test     public void decrypt() throws IOException, GeneralSecurityException {         String encryptedText = cryptographicUtils.encrypt(""Hello 123456"");         String decrypedText = cryptographicUtils.decrypt(encryptedText);          assertThat(decrypedText, Matchers.is(""Hello 123456""));     } </code></pre>  <p>I am getting consistent result if only one instance is running...</p> ",NULL,0,NULL,2019-04-15 15:10:00.913,0,2019-04-15 21:47:51.857,NULL,NULL,0,1293543,0,1,0,<java><tink>,Decryption result not consistent,247
56192126,0,2,"<p>The following lines show how to generate a key in Tink:</p>  <ul> <li><code>keysetHandle=KeysetHandle.generateNew(AeadKeyTemplates.AES128_GCM)</code></li> <li><code>privateKeysetHandle = KeysetHandle.generateNew(SignatureKeyTemplates.ECDSA_P256)</code></li> </ul>  <p>Could you show me how to construct a key given the parameters such as key bytes and related parameters?</p>  <hr>  <p>It is also possible to create a key by loading the parameters from JSON:</p>  <pre><code>  String keysetFilename = ""my_keyset.json"";   KeysetHandle keysetHandle = CleartextKeysetHandle.read(           JsonKeysetReader.withFile(new File(keysetFilename))); </code></pre>  <p>How is the key format in JSON defined?</p> ",NULL,1,NULL,2019-05-17 18:57:58.247,0,2020-11-19 19:15:57.180,2019-05-18 20:43:51.063,NULL,589259,252060,0,1,11,<cryptography><tink>,Key construction in Tink for KeysetHandle,1716
56685894,0,0,"<p>I have used this <a href=""https://github.com/google/tink/tree/master/examples/helloworld/android"" rel=""nofollow noreferrer"">demo</a> for the Android side.</p>  <p>In my case, I want to set this encrypt and decrypt process in the REST API. if someone has API through the reverse process(decompile) of Apk and call this API anyhow so I want to secure this process through this Tink.</p> ",NULL,0,NULL,2019-06-20 12:21:18.607,0,2019-06-20 12:21:18.607,NULL,NULL,0,4238159,0,1,3,<php><android><tink>,"How to encrypt in a client side (Android) and decrypt in a server side (PHP) with ""Tink""",119
56911743,0,1,"<p>I want to encrypt and decrypt with symmetrically with android Keystore KMS. I'm aware with Google cloud KMS, and AWS KMS, but I don't want to handle with that platform.</p>  <p>How to manage this generated Android Keystore private key for both (client, server) sides?</p>  <p>I have created a private key for encrypting and decrypting, but hard to manage for the store and share this key.  I had stored that private key in Private SharedPreferences for reuse but There is one problem is that, this private SharedPreferences is not secured because all can observe this private SharedPreferences file in the rooted device.</p>  <p>Refer this <a href=""https://github.com/google/tink/blob/master/docs/KEY-MANAGEMENT.md"" rel=""nofollow noreferrer"">link</a> to get information about generating a private key for Android Keystore.</p>  <p>I'm new with tink, so please help me to out this. if there is a wrong thing in my idea then feel free to give your opinion.</p> ",NULL,0,NULL,2019-07-06 06:20:01.483,0,2019-09-18 21:04:52.167,NULL,NULL,0,4238159,0,1,2,<android><encryption-symmetric><tink>,How Do I manage Android Keystore KMS for symmetric encryption and decryption?,1703
57235613,0,1,"<p>I wanted to use Tink library and able to encrypt and decrypt data but not understanding what is the purpose of master key in its creation and how to create a master key for it.</p>  <pre><code> private fun getOrGenerateNewKeysetHandle(): KeysetHandle {         return AndroidKeysetManager.Builder()             .withSharedPref(activity, EFE_TINK_KEYSET_NAME, null)             .withKeyTemplate(AeadKeyTemplates.AES256_GCM)             .withMasterKeyUri(""android-keystore://tink_master_key"")             .build().keysetHandle     } </code></pre>  <p>Here, how should I create tink_master_key?</p> ",NULL,0,NULL,2019-07-27 19:58:02.767,0,2019-09-17 18:35:24.883,NULL,NULL,0,11710056,0,1,1,<android><android-keystore><tink>,How to create master key in Tink android,947
57723775,57730377,2,"<p>I have some encrypted columns in BigQuery that I want to decrypt using BigQuery functions.</p>  <p>The mechanic used in encrypting them is AES 256. The vector used is encoded in UTF8. The resulting data is encrypted in Base64.</p>  <p>What I want to do is decrypt the fields passed to me in BigQuery using functions without going through the trouble of doing extra steps of decrypting them elsewhere and then integrating them back in BigQuery. Note that the encrypted columns which I have access in BigQuery to are of type string.</p>  <p>I read about some functions that can decrypt in BigQuery like AEAD.DECRYPT_BYTES and AEAD.DECRYPT_STRING, and I wonder if they could be of help in my case.</p>  <p>Are there any way to do that ? If so, can you walk me through the process ?</p>  <p>P.S: Those are not the actual key and vector values, just a similar-looking example.</p> ",NULL,0,NULL,2019-08-30 09:09:01.447,0,2019-09-03 08:07:26.563,2019-09-03 08:07:26.563,NULL,11532560,11532560,0,1,0,<javascript><encryption><google-cloud-platform><google-bigquery>,How can I decrypt columns in BigQuery?,6432
58318544,0,1,"<p>I am wondering if I encrypt a plaintext, let's say using the Go SDK whether I will be able to decrypt it using the Java SDK? Is that a design goal of the library to guarantee this portability across programming languages?  </p> ",NULL,0,NULL,2019-10-10 08:27:32.160,0,2020-01-15 17:17:51.520,NULL,NULL,0,402231,0,1,0,<tink>,Are Google Tink ciphertexts portable across programming languages?,71
58680609,0,2,"<p>I am trying to create an encrypted token that is to be sent as an REST API response. The end user then can send the same token during next request to this api, and I can parse it and get some context info (of the previous one).</p>  <p>Since I'm new to cryptography, I felt it's better to pick up <code>Google tink</code> instead of writing the encryption/decryption code by myself. However I'm not able to decrypt correctly.</p>  <p>I am doing the encryption/decryption like the following:</p>  <pre><code>public class CipherUtils {      public static byte[] encrypt(byte[] plainText,                                   byte[] associatedData) throws GeneralSecurityException {         KeysetHandle keysetHandle = KeysetHandle.generateNew(AeadKeyTemplates.AES128_GCM);         Aead aead = keysetHandle.getPrimitive(Aead.class);         return aead.encrypt(plainText, associatedData);     }      public static byte[] decrypt(byte[] cipherText,                                   byte[] associatedData) throws GeneralSecurityException {         KeysetHandle keysetHandle = KeysetHandle.generateNew(AeadKeyTemplates.AES128_GCM);         Aead aead = keysetHandle.getPrimitive(Aead.class);         return aead.decrypt(cipherText, associatedData);     } } </code></pre>  <p>Here's how I am generating the token:</p>  <pre><code>String associatedData = ""somethingUnique""; String data = ""tokenToBeEncrypted"";  byte[] ciphered = CipherUtils.encrypt(data.getBytes(), associatedData.getBytes()); String finalToken = Base64.getEncoder().encodeToString(ciphered); </code></pre>  <p>This <code>finalToken</code> is sent back as response and also retrieved from next request.</p>  <p>Here's I am trying to decrypt:</p>  <pre><code>String associatedData = ""somethingUnique""; // same one used for encrypting String token = // retrieved from http request byte[] decodedText = Base64.getDecoder().decode(token); byte[] deciphered = CipherUtils.decrypt(decodedText, associatedData.getBytes()); </code></pre>  <p>This always results in the following exception:</p>  <pre><code>java.security.GeneralSecurityException: decryption failed     at com.google.crypto.tink.aead.AeadWrapper$WrappedAead.decrypt(AeadWrapper.java:82)     at CipherUtils.decrypt(CipherUtils.java:22) </code></pre>  <p>What am I missing here?</p>  <p>P.S: I'm using <code>tink</code> version <code>1.3.0-rc1</code></p> ",NULL,1,NULL,2019-11-03 13:28:21.563,0,2020-09-01 04:23:48.283,NULL,NULL,0,10789057,0,1,1,<java><encryption><tink>,Decryption erorr when using tink in Java,1910
58694668,0,1,"<p>I wanted to do server-side validation for Admob rewarded video ads on my android app. For this, I followed the <a href=""https://developers.google.com/admob/android/rewarded-video-ssv"" rel=""nofollow noreferrer"">instructions in the admob documentation</a> but failed.</p>  <p>First I imported the google tink library from gradle as follows.</p>  <pre><code>implementation 'com.google.crypto.tink:tink-android:1.3.0-rc1' </code></pre>  <p>Then i wanted to call the RewardedAdsVerifier helper class in <a href=""https://github.com/google/tink"" rel=""nofollow noreferrer"">google tink</a> library as shown in the Admob documentation, in MainActivity, showing the rewarded video ads, but this clas could not be included in my system.</p>  <pre><code>RewardedAdsVerifier verifier = new RewardedAdsVerifier.Builder()         .fetchVerifyingPublicKeysWith(                 RewardedAdsVerifier.KEYS_DOWNLOADER_INSTANCE_PROD)         .build(); String rewardUrl = ""url""; verifier.verify(rewardUrl); </code></pre>  <p>When I try to call the RewardedAdsVerifier class in MainActivity as above, Android studio gives me the error ""Can not resolve symbol 'RewardedAdsVerifier'"".</p>  <p>As a result of my research on server-side verification of the rewarded video ad, I couldn't find any examples or samples. I'd be more than happy to help me with how I can do this. Thanks in advance.</p> ",NULL,1,NULL,2019-11-04 13:42:19.440,0,2019-11-25 14:33:04.890,2019-11-04 13:47:42.783,NULL,6549556,6549556,0,1,0,<android><validation><server-side><tink>,Admob rewarded ads server side verification,1100
58972192,0,0,"<p>I was looking for a simple way to encrypt a short text message with a Password Based Encryption (PBE) and use Google Tink for the cryptographic part and found that Tink doesn't provide PBE natively. To solve this problem I made a simple class that does all the work with PBE, keyhandling and encryption/decryption.</p>  <p>The usage in a program is very simple and you need only 4 lines of code to use it:</p>  <pre><code>AeadConfig.register(); // tink initialisation TinkPbe tpbe = new TinkPbe(); // tink pbe initialisation String ciphertextString = tpbe.encrypt(passwordChar, plaintextString); // encryption String decryptedtextString = tpbe.decrypt(passwordChar, ciphertextString); // decryption </code></pre>  <p>On my Github you find two sample programms to show how to implement the class (with and without GUI): <a href=""https://github.com/java-crypto/H-Google-Tink/tree/master/H%20Tink%20Textencryption%20PBE"" rel=""nofollow noreferrer"">https://github.com/java-crypto/H-Google-Tink/tree/master/H%20Tink%20Textencryption%20PBE</a></p>  <p>Here is the sourcecode of the TinkPbe.java-class:</p>  <pre><code>package tinkPbe;  /* *   * Diese Klasse gehört zu diesen beiden Hauptklassen * This class belongs to these main classes: * TinkPbeConsole.java | TinkPbeGui.java  *  * Herkunft/Origin: http://javacrypto.bplaced.net/ * Programmierer/Programmer: Michael Fehr * Copyright/Copyright: frei verwendbares Programm (Public Domain) * Copyright: This is free and unencumbered software released into the public domain. * Lizenttext/Licence: &lt;http://unlicense.org&gt; * getestet mit/tested with: Java Runtime Environment 8 Update 191 x64 * getestet mit/tested with: Java Runtime Environment 11.0.1 x64 * Datum/Date (dd.mm.jjjj): 20.11.2019 * Funktion: verschlüsselt und entschlüsselt einen Text mittels Google Tink *           im Modus AES GCM 256 Bit. Der Schlüssel wird mittels PBE *           (Password based encryption) erzeugt. * Function: encrypts and decrypts a text message with Google Tink. *           Used Mode is AES GCM 256 Bit. The key is generated with PBE *           (Password based encryption). * * Sicherheitshinweis/Security notice * Die Programmroutinen dienen nur der Darstellung und haben keinen Anspruch auf eine korrekte Funktion,  * insbesondere mit Blick auf die Sicherheit !  * Prüfen Sie die Sicherheit bevor das Programm in der echten Welt eingesetzt wird. * The program routines just show the function but please be aware of the security part -  * check yourself before using in the real world ! *  * Das Programm benötigt die nachfolgenden Bibliotheken (siehe Github Archiv): * The programm uses these external libraries (see Github Archive): * jar-Datei/-File: tink-1.2.2.jar * https://mvnrepository.com/artifact/com.google.crypto.tink/tink/1.2.2 * jar-Datei/-File: protobuf-java-3.10.0.jar * https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java/3.10.0 * jar-Datei/-File: json-20190722.jar * https://mvnrepository.com/artifact/org.json/json/20190722 *   */  import java.io.IOException; import java.io.UnsupportedEncodingException; import java.nio.charset.StandardCharsets; import java.security.GeneralSecurityException; import java.security.NoSuchAlgorithmException; import java.security.spec.InvalidKeySpecException; import java.util.Base64; import javax.crypto.SecretKeyFactory; import javax.crypto.spec.PBEKeySpec; import com.google.crypto.tink.Aead; import com.google.crypto.tink.CleartextKeysetHandle; import com.google.crypto.tink.JsonKeysetReader; import com.google.crypto.tink.KeysetHandle; import com.google.crypto.tink.aead.AeadFactory;  public class TinkPbe {      public static String encrypt(char[] passwordChar, String plaintextString)             throws GeneralSecurityException, IOException {         byte[] keyByte = pbkdf2(passwordChar);         String valueString = buildValue(keyByte);         String jsonKeyString = writeJson(valueString);         KeysetHandle keysetHandleOwn = CleartextKeysetHandle.read(JsonKeysetReader.withString(jsonKeyString));         // initialisierung         Aead aead = AeadFactory.getPrimitive(keysetHandleOwn);         // verschlüsselung         byte[] ciphertextByte = aead.encrypt(plaintextString.getBytes(""utf-8""), null); // no aad-data         return Base64.getEncoder().encodeToString(ciphertextByte);     }      public static String decrypt(char[] passwordChar, String ciphertextString)             throws GeneralSecurityException, IOException {         byte[] keyByte = pbkdf2(passwordChar);         String valueString = buildValue(keyByte);         String jsonKeyString = writeJson(valueString);         KeysetHandle keysetHandleOwn = CleartextKeysetHandle.read(JsonKeysetReader.withString(jsonKeyString));         // initialisierung         Aead aead = AeadFactory.getPrimitive(keysetHandleOwn);         // verschlüsselung         byte[] plaintextByte = aead.decrypt(Base64.getDecoder().decode(ciphertextString), null); // no aad-data         return new String(plaintextByte, StandardCharsets.UTF_8);     }      private static byte[] pbkdf2(char[] passwordChar)             throws NoSuchAlgorithmException, InvalidKeySpecException, UnsupportedEncodingException {         final byte[] passwordSaltByte = ""11223344556677881122334455667788"".getBytes(""UTF-8"");         final int PBKDF2_ITERATIONS = 10000; // anzahl der iterationen, höher = besser = langsamer         final int SALT_SIZE_BYTE = 256; // grösse des salts, sollte so groß wie der hash sein         final int HASH_SIZE_BYTE = 256; // größe das hashes bzw. gehashten passwortes, 128 byte = 512 bit         byte[] passwordHashByte = new byte[HASH_SIZE_BYTE]; // das array nimmt das gehashte passwort auf         PBEKeySpec spec = new PBEKeySpec(passwordChar, passwordSaltByte, PBKDF2_ITERATIONS, HASH_SIZE_BYTE);         SecretKeyFactory skf = SecretKeyFactory.getInstance(""PBKDF2WithHmacSHA512"");         passwordHashByte = skf.generateSecret(spec).getEncoded();         return passwordHashByte;     }      private static String buildValue(byte[] gcmKeyByte) {         // test for correct key length         if ((gcmKeyByte.length != 16) &amp;&amp; (gcmKeyByte.length != 32)) {             throw new NumberFormatException(""key is not 16 or 32 bytes long"");         }         // header byte depends on keylength         byte[] headerByte = new byte[2]; // {26, 16 }; // 1A 10 for 128 bit, 1A 20 for 256 Bit         if (gcmKeyByte.length == 16) {             headerByte = new byte[] { 26, 16 };         } else {             headerByte = new byte[] { 26, 32 };         }         byte[] keyByte = new byte[headerByte.length + gcmKeyByte.length];         System.arraycopy(headerByte, 0, keyByte, 0, headerByte.length);         System.arraycopy(gcmKeyByte, 0, keyByte, headerByte.length, gcmKeyByte.length);         String keyBase64 = Base64.getEncoder().encodeToString(keyByte);         return keyBase64;     }      private static String writeJson(String value) {         int keyId = 1234567; // fix         String str = ""{\n"";         str = str + ""    \""primaryKeyId\"": "" + keyId + "",\n"";         str = str + ""    \""key\"": [{\n"";         str = str + ""        \""keyData\"": {\n"";         str = str + ""            \""typeUrl\"": \""type.googleapis.com/google.crypto.tink.AesGcmKey\"",\n"";         str = str + ""            \""keyMaterialType\"": \""SYMMETRIC\"",\n"";         str = str + ""            \""value\"": \"""" + value + ""\""\n"";         str = str + ""        },\n"";         str = str + ""        \""outputPrefixType\"": \""TINK\"",\n"";         str = str + ""        \""keyId\"": "" + keyId + "",\n"";         str = str + ""        \""status\"": \""ENABLED\""\n"";         str = str + ""    }]\n"";         str = str + ""}"";         return str;     } } </code></pre>  <p>Please keep in mind that using a plaintext-<strong>String</strong> means that your plaintext is inmutable and undeletable in your heap until the Garbage Collector destroys them.</p>  <p>A more detailed description is vailable on my website: <a href=""http://javacrypto.bplaced.net/h-tink-string-encryption-using-pbe-and-gui/"" rel=""nofollow noreferrer"">http://javacrypto.bplaced.net/h-tink-string-encryption-using-pbe-and-gui/</a></p> ",NULL,0,NULL,2019-11-21 10:04:15.330,0,2019-11-21 10:10:46.663,2019-11-21 10:10:46.663,NULL,8166854,8166854,55070513,2,3,NULL,NULL,0
59133681,0,1,"<p>I am trying to implement Google Pay decryption method as mentioned. </p>  <p><a href=""https://developers.google.com/pay/api/android/guides/resources/payment-data-cryptography#decrypt-token"" rel=""nofollow noreferrer"">https://developers.google.com/pay/api/android/guides/resources/payment-data-cryptography#decrypt-token</a></p>  <p>It mentions to use <code>tink</code> library with the example of Java (PaymentMethodTokenRecipient) but I'm unable to duplicate it for Golang.</p> ",NULL,1,NULL,2019-12-02 06:28:28.313,0,2019-12-02 22:33:07.903,2019-12-02 22:33:07.903,NULL,12466654,12466654,0,1,1,<go><google-pay><tink>,Google Pay PaymentMethodTokenRecipient function implementation in Golang,728
59624889,0,0,"<p>The app I am implementing will contains highly sensitive user data and as such we want to encrypt the data before saving it, both locally and online (on Gcloud Firestore). I'd like to do this using <a href=""https://cloud.google.com/kms/docs/envelope-encryption"" rel=""nofollow noreferrer"">Envelope Encryption</a>.</p>  <p>Currently I have a Python back-end deployed on Gcloud Run which has the credentials to connect to GCloud KMS. It offers a REST API that I want to use to encrypt the Data Encryption Key (DEK) using a GCloud KMS key as Key Encryption Key (KEK). Currently it can only encrypt simple strings usI do this from a separate back-end instead of from the app itself because as far as I know, there's no safe way to store GCloud Credentials inside the app. The GCloud KMS Client Library <a href=""https://github.com/googleapis/google-cloud-java"" rel=""nofollow noreferrer"">does not support Android</a>. <a href=""https://stackoverflow.com/questions/51652261/why-doesnt-google-cloud-key-management-services-java-client-library-support-an"">Another SO answer</a> touches upon this.</p>  <p>On the Android side I use <a href=""https://github.com/google/tink/blob/master/docs/JAVA-HOWTO.md"" rel=""nofollow noreferrer"">Tink</a> to create a Data Encryption Key, and I can encrypt my data with it. The last step, and what I can't fully figure out, is how I can send the AEAD Key to my backend. This is what I've already considered: </p>  <ul> <li><p>Tink technically already has support for directly <a href=""https://github.com/google/tink/blob/master/docs/JAVA-HOWTO.md#envelope-encryption"" rel=""nofollow noreferrer"">working with GCloud</a>, but that would require my app to have GCloud Credentials which isn't secure as mentioned above.</p></li> <li><p>I could use a <a href=""https://github.com/google/tink/blob/master/docs/JAVA-HOWTO.md#storing-keysets"" rel=""nofollow noreferrer"">JSONKeyWriter</a> to write a JSON version of the key to a String using a ByteArrayOutputStream, and send this String to be encrypted using my back-end, but for some reason I can't yet explain that doesn't feel right to me. </p></li> </ul>  <p>So I'm a bit stuck. Is the second option still the correct one? Maybe there is another third option I have not yet considered. I don't think I'm the first ever to implement this but I can't seem to find any information on working this way. </p> ",NULL,6,NULL,2020-01-07 08:44:49.627,0,2020-02-15 05:34:14.743,2020-02-15 05:34:14.743,NULL,10930700,810636,0,1,1,<android><encryption><gcloud><google-cloud-kms><tink>,Implementing envelope encryption on Android using Tink and Google Cloud KMS,567
60029410,0,1,"<p>I am trying to encrypt a file(txt, pdf, doc) using Google Tink - streaming AEAD encryption, below is the Java code which I am trying to execute. But all I get is 1 KB output encrypted file and no errors. All Input files whether 2 MB or more than 10 MB, output file will be always of 1 KB.  I am unable to figure out what could be going wrong, can someone please help.</p>  <pre><code>      TinkConfig.register();        final int chunkSize = 256;        KeysetHandle keysetHandle = KeysetHandle.generateNew(                      StreamingAeadKeyTemplates.AES128_CTR_HMAC_SHA256_4KB);      // 2. Get the primitive.     StreamingAead streamingAead = keysetHandle.getPrimitive(StreamingAead.class);     // 3. Use the primitive to encrypt some data and write the ciphertext to a file,     FileChannel ciphertextDestination =             new FileOutputStream(""encyptedOutput.txt"").getChannel();     String associatedData = ""Tinks34"";     WritableByteChannel encryptingChannel =             streamingAead.newEncryptingChannel(ciphertextDestination, associatedData.getBytes());      ByteBuffer buffer = ByteBuffer.allocate(chunkSize);     InputStream in = new FileInputStream(""FileToEncrypt.txt"");      while (in.available() &gt; 0) {         in.read(buffer.array());         System.out.println(in);         encryptingChannel.write(buffer);     }     encryptingChannel.close();     in.close();     System.out.println(""completed""); </code></pre> ",NULL,3,NULL,2020-02-02 18:48:04.100,0,2020-02-03 14:08:01.723,NULL,NULL,0,5737945,0,1,1,<java><cryptography><tink>,Google TINK - Streaming AEAD Always returning an output file of 1 KB,222
60311697,0,2,"<p>I am encrypting a file created on the android app in a Bluetooth service. In another class later on I want to decrypt this file and upload it to a server.</p>  <p>For encryption I am using the AndroidX androidx.security:security-crypto:1.0.0-alpha02 library which is a wrapper around Tink. I have read all the developer docs and tutorials I could find for EncryptedFile, EncryptedFile.Builder, and so on.</p>  <p>I encrypt the file as follows:</p>  <pre><code>String keySetAlias = ""BilboBaggins""; String keySetPref = ""Hobbits"";  EncryptedFile m_StudyChannelEncryptedFile = new EncryptedFile.Builder(     filePath,     getApplicationContext(),     masterKeyAlias,    EncryptedFile.FileEncryptionScheme.AES256_GCM_HKDF_4KB).setKeysetAlias(keySetAlias).setKeysetPrefName(keySetPref).build(); m_output = m_StudyChannelEncryptedFile.openFileOutput(); </code></pre>  <p>From here I can write to a file like with a normal FileOutputStream, and from looking at the data that is written in the phone's storage I can confirm that it is encrypted.</p>  <p>Prior to uploading, I attempt to do the same thing in another class and then decrypt it.</p>  <pre><code>String masterKeyAlias = MasterKeys.getOrCreate(MasterKeys.AES256_GCM_SPEC); String keySetAlias = ""BilboBaggins""; String keySetPref = ""Hobbits"";  EncryptedFile encryptedFile = new EncryptedFile.Builder(   filePath,   getApplicationContext(),   masterKeyAlias,   EncryptedFile.FileEncryptionScheme.AES256_GCM_HKDF_4KB).setKeysetAlias(keySetAlias).setKeysetPrefName(keySetPref).build(); // Read channel data file   FileInputStream fChannel = encryptedFile.openFileInput(); m_Dat1Size = fChannel.available(); </code></pre>  <p>From here the issue is that the available size of the file I'm getting is zero - like it doesn't exist. I can confirm that the original data written is not overwritten though as the file on the phone storage still has encrypted data.</p>  <p>I believe that by providing it with a location keySetAlias, keySetPref the EncryptedFile builder should be able to initialise an EncryptedFile instance which will have the correct keys.</p>  <p>I would appreciate any help or insight!</p>  <p>Thank you, Michael</p> ",NULL,2,NULL,2020-02-20 01:31:29.403,0,2020-02-20 18:13:39.870,NULL,NULL,0,4400826,0,1,2,<android><file><encryption><androidx><tink>,Issue decrypting a file encrypted with EncryptedFile on Android,1829
61871436,0,1,"<p>I have been using Google Keyczar for encrypting data in my JAVA app. And I want to change the crypto solution to Google Tink.</p>  <p>But the problem is the already encrypted data by Keyczar. Can I decrypt them by Tink?</p>  <p>If yes, I want to change the crypto solution from Keyczar to Tink. If no, I have to think about another solution. </p>  <p>Thank you.</p> ",NULL,1,NULL,2020-05-18 14:05:58.190,0,2020-11-28 15:28:05.447,NULL,NULL,0,7029186,0,1,0,<tink><keyczar>,Can I decrypt data which is encrypted by Keyczar using Google Tink?,239
62301870,62418240,1,"<p>Is there a way to make HTTP requests over mTLS with private keys stored in Google Cloud Key Management Service?</p>  <p>In <a href=""https://medium.com/google-cloud/mtls-with-google-cloud-kms-fb17f3ed8219"" rel=""nofollow noreferrer"">this blog post</a> what we need is done in Go. Is it possible to achieve the same in Python? I was hoping that Tink library provides some ready-made solution, but can't find.</p> ",NULL,1,NULL,2020-06-10 10:56:38.583,0,2020-06-16 22:06:46.473,2020-06-16 22:02:18.423,NULL,766118,766118,0,1,4,<python><google-cloud-platform><urllib><google-cloud-kms><tink>,Mutual TLS in Python using Google Cloud KMS,429
63295595,0,0,"<p>I am trying to make an end to end encrypted app where I encrypt data at the mobile end at the time of sending and we can decrypt it at the server(for user info). but I am not able to find any solution or example for how we can manage or share key which is generated at the mobile end for encrypting data to decrypt at server(.NET) end.</p> <p>#Googel_Tink</p> ",NULL,3,NULL,2020-08-07 05:11:43.617,0,2020-08-10 04:43:55.963,NULL,NULL,0,7979054,0,1,1,<android><.net><encryption><key-management><tink>,Google Tink Key management and sharing from android to .NET to decrypt data to server end which is encrypted at mobile(client) end,237
63501785,0,1,"<p>I'm using the Google Tink library in my Java project to encrypt two texts, one with Symmetric Key Encryption (SKE), and another one with Deterministic symmetric key encryption (DSKE).</p> <p>This is a backend application, and I do not have a remote storage for storing a master key (google could, aws, ...).</p> <p>What would be the correct way to generate the secret material that I need to encrypt both of these files ? I think I need to use 'tinkey' for this task, but I don't really understand the difference between a key and a keyset. Can my SKE key and DSKE key be in the same keyset ? How to generate them ? Can I have a master key that's used for key rotation ?</p> <p>Thanks</p> ",NULL,0,NULL,2020-08-20 09:04:24.153,0,2020-08-25 08:47:26.340,NULL,NULL,0,14136245,0,1,0,<java><cryptography><tink>,How to generate a Java tink key?,590
63959906,0,1,"<p>I'm looking at the Tink documentation, but I don't see a clear way how to rotate a key. Basically, I would like to do somethink like:</p> <pre><code>KeyTemplate keyTemplate = AeadKeyTemplates.AES256_GCM; KeysetHandle keysetHandle = KeysetHandle.generateNew(keyTemplate); // Do some stuff... and then keysetHandle.rotateKey(); // How to do the equivalent of this?? </code></pre> <p>The documentation talks about how key rotation is a core feature of the library. However, there are no examples in the documentation for how to do this. What's the &quot;correct&quot; way to rotate keys using the library? I would also prefer to separate rotate and activate the new key.</p> ",NULL,0,NULL,2020-09-18 16:58:42.500,0,2020-09-19 21:27:53.230,NULL,NULL,0,14239262,0,1,0,<java><tink>,How to rotate keys?,945
64502478,0,1,"<p>I'm using <em><strong>'androidx.security:security-crypto:1.1.0-alpha02</strong></em>' in an android project. It works fine for file encryption/decription. I've set up a master key inside the hardware keystore that requires authentication to be used.</p> <pre><code>private static MasterKey getOrCreateMasterKey(final Application application)     throws IOException, GeneralSecurityException {     return new MasterKey.Builder(application)         .setKeyScheme(MasterKey.KeyScheme.AES256_GCM)         .setUserAuthenticationRequired(true, 3600)         .setRequestStrongBoxBacked(true)         .build(); } </code></pre> <p>The <em><strong>Security API</strong></em> automatically generated what i think is a <em><strong>Tink</strong></em> keyset file, adapted for Android Shared Preferences.</p> <pre><code>&lt;?xml version='1.0' encoding='utf-8' standalone='yes' ?&gt; &lt;map&gt;     &lt;string name=&quot;__androidx_security_crypto_encrypted_file_keyset__&quot;&gt;129c0157ebfb4adffbd04e3ad4cd44336c5e89c3fe455d949031436c63789092960d8b93053de8e1fd855b61047a1d496ff26006958982e6a90f950746dbc7afc6b252bf51149b8404e5ff8616f9911ad54e153bf2c2c21eb571ca11223c77edd01b488465f7ab286ffd9054d7e396d1b2a187152dd9bf76ee5df9a5faefd5e5b7ec159fa04a860f9d237f833763f6c42acbcdedfb06a575264f948049b3841a4f08c094920612480a3d747970652e676f6f676c65617069732e636f6d2f676f6f676c652e63727970746f2e74696e6b2e41657347636d486b646653747265616d696e674b6579100118c09492062003&lt;/string&gt; &lt;/map&gt; </code></pre> <p>If I understand correctly, that is the actual DEK used for encrypting the files.</p> <p>Now the problem is that if I want to export an encrypted file I would not be able to decrypt on another device, because the master key inside the Hardware KeyStore is not exportable.</p> <p>The best solution would be to export the <strong>DEK</strong> inside the keyset, with PBKDF2 and decrypt it into another device keyset.</p> <p>An optional solution would be to create the master key material outside the keystore, protect it with another KeyStore key and export it with PBKDF2 when needed. This will break the logical flow of the jetpack Security library.</p> <p>I've tried to import the <em><strong>Tink</strong></em> library <em><strong>'com.google.crypto.tink:tink-android:1.5.0'</strong></em> so that I could start managing the Keyset directly, since the Security API doesn't have implementation for this usecase.</p> <pre><code>AndroidKeysetManager manager = new AndroidKeysetManager.Builder()     .withSharedPref(getApplicationContext(), &quot;my_keyset_name&quot;, &quot;my_pref_file_name&quot;)     .withKeyTemplate(AesGcmKeyManager.aes256GcmTemplate())     .withMasterKeyUri(masterKeyUri)     .build(); </code></pre> <p>Anyway, I couldn't find a way to decrypt the key inside the keyset with this manager, in order to be able to encrypt it with a password and export it properly.</p> <p>Do you know how should face this problem?</p> ",NULL,0,NULL,2020-10-23 15:00:38.100,0,2020-10-30 15:24:27.183,2020-10-24 08:58:06.167,NULL,14507326,14507326,0,1,2,<android><encryption><android-jetpack><android-keystore><tink>,Export keyset entry from Tink with AndroidKeysetManager,764
65821910,65840617,1,"<p><a href=""https://github.com/google/tink"" rel=""nofollow noreferrer"">Google Tink</a> supports &quot;hybrid encryption&quot; - a convenience method of encrypting a symmetric key with an asymmetric one, encrypting a plaintext with the symmetric key, and bundling the two ciphertexts as one message.</p> <p>However, seems like it basically supports two sets of parameter combinations:</p> <pre><code>EciesAeadHkdfPrivateKeyManager.eciesP256HkdfHmacSha256Aes128GcmTemplate(); EciesAeadHkdfPrivateKeyManager.eciesP256HkdfHmacSha256Aes128CtrHmacSha256Template(); </code></pre> <p>Internally, these are mapped to e.g.</p> <pre><code>  public static final KeyTemplate eciesP256HkdfHmacSha256Aes128GcmTemplate() {     return createKeyTemplate(         EllipticCurveType.NIST_P256,         HashType.SHA256,         EcPointFormat.UNCOMPRESSED,         AesGcmKeyManager.aes128GcmTemplate(),         KeyTemplate.OutputPrefixType.TINK,         EMPTY_SALT);   } </code></pre> <p>It'd seem fairly straightforward to swap e.g. <code>AesGcmKeyManager.aes128GcmTemplate()</code> for <code>AesGcmKeyManager.aes256GcmTemplate()</code>, except <code>createKeyTemplate</code> is private, and THAT uses package-private methods, and <code>EciesAeadHkdfPrivateKeyManager</code> is final, and overall it just seems like it's going out its way to prevent us from messing with those parameters.  Is there a reason for that?  Should I reconstitute my own modified version from code scrounged from the Tink source and/or just use reflection to bypass <code>private</code>, or are there hidden non-orthogonalities to trip me up and make the result insecure?</p> ",NULL,2,NULL,2021-01-21 05:59:26.437,0,2021-01-22 06:57:20.763,NULL,NULL,0,513038,0,1,0,<java><cryptography><tink>,Google Tink Hybrid params,253
66893044,0,0,"<p>I want to implement the decryption of Google Pay payment tokens using the Go language. Google strongly recommends using the Tink library.</p> <p>I have looked at the instructions provided <a href=""https://github.com/google/tink/blob/master/docs/GOLANG-HOWTO.md"" rel=""nofollow noreferrer"">here</a>, but couldn't figure out how to convert an already existing private and public key pair to a keyset. If it isn't possible, should I generate a private and public keyset using Tink first and then send it to Google?</p> <p>If anyone can provide a working example of the Google Pay payment token using Tink library in Go language or a step-by-step guide (even a short one), that would really help. Thank you in advance.</p> ",NULL,0,NULL,2021-03-31 18:06:19.423,0,2021-04-01 05:11:11.987,2021-04-01 05:11:11.987,NULL,11248508,5662168,0,1,1,<go><google-pay><tink>,Decrypt Google Pay payment token using Go,336
67320913,67343662,2,"<p>In Tink, it is possible to load and write cleartext keysets as jsons. An non-working example is seen below:</p> <pre><code>{   &quot;primaryKeyId&quot;: 2800579,   &quot;key&quot;: [     {       &quot;keyData&quot;: {         &quot;typeUrl&quot;: &quot;type.googleapis.com/google.crypto.tink.AesGcmKey&quot;,         &quot;value&quot;: &quot;ODA9eJX9wcAGwZocL0Jym==&quot;,         &quot;keyMaterialType&quot;: &quot;SYMMETRIC&quot;       },       &quot;status&quot;: &quot;ENABLED&quot;,       &quot;keyId&quot;: 2800579,       &quot;outputPrefixType&quot;: &quot;TINK&quot;     }   ] } </code></pre> <p>My question is- is it possible to insert your own values into the various key/value pairs to get another valid keyset? I have experimented with this and haven't had much success- mainly because of the &quot;value&quot; key which complains <code>INVALID_ARGUMENT: Could not parse key_data.value as key type 'type.googleapis.com/google.crypto.tink.AesGcmKey'</code> Any idea of what a valid &quot;value&quot; would be?</p> ",NULL,0,NULL,2021-04-29 15:52:56.167,0,2021-09-29 23:29:58.513,2021-05-01 18:18:45.727,NULL,9014097,3776598,0,1,3,<python><cryptography><tink>,How to pass in valid values into cleartext_keyset_json to create a Tink key,601
67925337,0,0,"<p>I've got Android code that encrypts/decrypts data. It was written over a year ago by another developer (who has since left) and has worked fine until very recently, when it started crashing with the following exception:</p> <pre><code>android.security.keystore.AndroidKeyStoreRSAPrivateKey cannot be cast to javax.crypto.SecretKey </code></pre> <p>This appears to only occur when upgrading the application and an existing key is already present. I ran a diff off the gradle files against the prior release (which works) and no frameworks/sdks have been updated.</p> <p>The exception occurs in .build():</p> <pre><code>    private fun getOrGenerateNewKeysetHandle(alias: String): KeysetHandle {         val keysetName = &quot;${TINK_KEYSET_NAME}_$alias&quot;         return AndroidKeysetManager.Builder()                 .withSharedPref(reactApplicationContext, keysetName, PREF_FILE_NAME)                 .withKeyTemplate(HybridKeyTemplates.ECIES_P256_HKDF_HMAC_SHA256_AES128_GCM)                 .withMasterKeyUri(MASTER_KEY_URI)                 .build()                 .keysetHandle     } </code></pre> <p>I traced the code down to <code>AndroidKeystoreAesGcm</code> and the exception occurs on assignment returned from getKey (which succeeds):</p> <pre><code>  public AndroidKeystoreAesGcm(String keyId) throws GeneralSecurityException, IOException {     KeyStore keyStore = KeyStore.getInstance(&quot;AndroidKeyStore&quot;);     keyStore.load(null /* param */);     key = (SecretKey) keyStore.getKey(keyId, null /* password */);   } </code></pre> <p>This has left me uncertain of how to proceed. KeyStore has a key and I need it to access application data. I suspect my old arch-nemesis, gradle, is to blame, but... well, any help or insight would be greatly appreciated.</p> ",NULL,4,NULL,2021-06-10 16:44:23.487,0,2021-06-10 16:44:23.487,NULL,NULL,0,1147934,0,1,2,<android><cryptography><tink>,AndroidKeysetManager Builder crash with HybridKeyTemplates,129
68360587,68360755,1,"<p>What I tried to run :</p> <pre><code>KeysetHandle keyHandler = KeysetHandle.generateNew(KeyTemplates.get(&quot;AES128_GCM&quot;)); </code></pre> <p>Error I got :</p> <pre><code>java.security.GeneralSecurityException: cannot find key template: AES128_GCM      at com.google.crypto.tink.KeyTemplates.get(KeyTemplates.java:37)      at com.example.AppName.password_pin.onCreate(password_pin.java:59)      at android.app.Activity.performCreate(Activity.java:7136)      at android.app.Activity.performCreate(Activity.java:7127)      at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1271)      at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2893)      at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3048)      at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:78)      at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:108)      at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:68)      at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1808)      at android.os.Handler.dispatchMessage(Handler.java:106)      at android.os.Looper.loop(Looper.java:193)      at android.app.ActivityThread.main(ActivityThread.java:6669)      at java.lang.reflect.Method.invoke(Native Method)      at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)      at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858) </code></pre> <p>Am I missing something? Did I skip some step accidentally?</p> ",NULL,0,NULL,2021-07-13 10:21:45.597,0,2021-07-13 10:42:33.733,NULL,NULL,0,11380610,0,1,4,<android><aes><tink>,Tink GeneralSecurityException: cannot find key template: AES128_GCM Tink,879
68593094,0,1,"<p>Im investigating the use of <code>com.google.crypto.tink:tink-android:1.6.1</code> in my current Android project.</p> <p>The data I am encrypting includes the OAuth2 Access Token/Refresh Token I employ for my remote API calls, e.g. Access Token is my Bearer token for the Authorisation HTTP header.</p> <p>Im concerned I have made an error in my encryption/decryption logic as I am experiencing an intermittent problem where I cannot Refresh the Token. The error from the server</p> <pre><code>{&quot;error_description&quot;:&quot;unknown, invalid, or expired refresh token&quot;,&quot;error&quot;:&quot;invalid_grant&quot;} </code></pre> <p>The refresh token cannot be expired as it lasts 24 hours.</p> <p>My code that initialises Tink resembles this:-</p> <pre><code>private fun manageTink() {     try {         AeadConfig.register()         authenticatedEncryption = generateNewKeysetHandle().getPrimitive(Aead::class.java)     } catch (e: GeneralSecurityException) {         throw RuntimeException(e)     } catch (e: IOException) {         throw RuntimeException(e)     } }  @Throws(IOException::class, GeneralSecurityException::class) private fun generateNewKeysetHandle(): KeysetHandle =     AndroidKeysetManager         .Builder()         .withSharedPref(this, TINK_KEYSET_NAME, PREF_FILE_NAME)         .withKeyTemplate(KeyTemplates.get(&quot;AES256_GCM&quot;))         .withMasterKeyUri(MASTER_KEY_URI)         .build()         .keysetHandle </code></pre> <p>Here is my code for encryption/decryption</p> <pre><code>import android.util.Base64 import com.google.crypto.tink.Aead import javax.inject.Inject  const val BASE64_ENCODE_SETTINGS = Base64.NO_WRAP or Base64.NO_PADDING  data class Security @Inject constructor(private val authenticatedEncryption: Aead) {      fun conceal(plainText: String, associatedData: String): String {         val plain64 = Base64.encode(plainText.encodeToByteArray(), BASE64_ENCODE_SETTINGS)         val associated64 = Base64.encode(associatedData.encodeToByteArray(), BASE64_ENCODE_SETTINGS)         val encrypted: ByteArray? = authenticatedEncryption.encrypt(plain64, associated64)          return Base64.encodeToString(encrypted, BASE64_ENCODE_SETTINGS)     }      fun reveal(encrypted64: String, associatedData: String): String {         val encrypted = Base64.decode(encrypted64.encodeToByteArray(), BASE64_ENCODE_SETTINGS)         val associated64 = Base64.encode(associatedData.encodeToByteArray(), BASE64_ENCODE_SETTINGS)         val decrypted: ByteArray? = authenticatedEncryption.decrypt(encrypted, associated64)          return String(Base64.decode(decrypted, BASE64_ENCODE_SETTINGS))     } } </code></pre> <p>Could the use of Base64 encode/decode be the issue? Where is my mistake?</p> ",NULL,4,NULL,2021-07-30 14:58:55.557,0,2021-09-29 23:58:55.953,NULL,NULL,0,423199,0,1,2,<android><encryption><base64><tink>,Intermittently corrupted data with Google Tink encryption,561
68729540,0,0,"<p>We are trying to use google tink and below is a sample that how we use it.</p> <pre><code>     const tinkLoader = () =&gt; import(&quot;tink-crypto&quot;);          tinkLoader().then((tink) =&gt; {       tink.hybrid.register();       const keyset = stringToUint8Array(atob(resource_response.data.encoded_key));       tink.binary         .deserializeNoSecretKeyset(keyset)         .getPrimitive(tink.hybrid.HybridEncrypt)         .then((hybridEncrypt) =&gt; {           //do some thing         });     });  </code></pre> <p>This is the error message:</p> <pre><code>ReferenceError: self is not defined at internal/proto.ts:85:23 at node_modules/tink-crypto/bundles/tink-crypto.umd.js:2:68 at Object. (node_modules/tink-crypto/bundles/tink-crypto.umd.js:5:2) </code></pre> <p>We used npm <a href=""https://www.npmjs.com/package/tink-crypto"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/tink-crypto</a> so I thought google tink supports backend JS. But according to this message, somewhere in the code has reference to self which is a variable of Window class and Window is not existing in Nodejs. Our Node is V12.</p> <p>Can anyone please help me about this? It's really hard to find any doc online about JS tink.</p> <p>Thanks!</p> ",NULL,2,NULL,2021-08-10 15:24:27.900,0,2021-08-10 15:24:27.900,NULL,NULL,0,16633730,0,1,0,<javascript><node.js><encryption><tink>,"google tink got ""referenceerror: self is not defined"" when using in Nodejs",563
68745088,68760195,1,"<p>It seems so much simpler to encrypt using java than obj-c with Tink. Given a known 32-bytes <code>XChaCha20Poly1305</code> <code>key</code>, and a 16-bytes authenticated data (<code>aad</code>), how can the same be done in objective-c?</p> <p><a href=""https://google.github.io/tink/javadoc/tink/1.3.0/index.html?com/google/crypto/tink/subtle/XChaCha20Poly1305.html"" rel=""nofollow noreferrer"">Java</a>:</p> <pre><code>    import com.google.crypto.tink.subtle.XChaCha20Poly1305;      XChaCha20Poly1305 xChaCha20Poly1305 = new XChaCha20Poly1305(key);     byte[] encryptedData = xChaCha20Poly1305.encrypt(plainData, aad); </code></pre> ",NULL,0,NULL,2021-08-11 15:40:16.490,0,2023-05-10 20:12:19.793,2021-08-11 21:05:07.247,NULL,5313355,5313355,0,1,0,<objective-c><tink>,How to do this in Tink's Objective-c?,191
69123367,0,0,"<p>I'm trying to convert Google Tink's KeysetHandle into byte [] and to construct the KeysetHandle back from the byte [].</p> <p>So here is the code I came up with</p> <pre><code>//Two functions for the conversion public static String keyToString(KeysetHandle keysetHandle) {     try {         ByteArrayOutputStream baos = new ByteArrayOutputStream();         ObjectOutputStream oos = new ObjectOutputStream(baos);         CleartextKeysetHandle.write(keysetHandle, JsonKeysetWriter.withOutputStream(baos));         oos.close();         return Arrays.toString(baos.toByteArray());     } catch (Exception e) {         e.printStackTrace();     }     return null; }  public static KeysetHandle stringToKey(String keysetString) {     keysetString = keysetString.replace(&quot;[&quot;,&quot;&quot;).replace(&quot;]&quot;,&quot;&quot;).replace(&quot; &quot;,&quot;&quot;);     try {         List&lt;Byte&gt; list = new ArrayList&lt;&gt;();         String[] splitArray = keysetString.split(&quot;,&quot;);         for (String x : splitArray) {             list.add((byte) Integer.parseInt(x));         }         byte[] data = Bytes.toArray(list);         System.out.println(Arrays.toString(data));         ByteArrayInputStream bais = new ByteArrayInputStream(data);         ObjectInputStream ois = new ObjectInputStream(bais);         KeysetHandle keysetHandle = CleartextKeysetHandle.read(JsonKeysetReader.withInputStream(ois));         ois.close();         return keysetHandle;     } catch (Exception e) {         e.printStackTrace();     }     return null; } </code></pre> <p>Main Function :</p> <pre><code>KeysetHandle keyHandle = null; try {     AeadConfig.register();     keyHandle = KeysetHandle.generateNew(KeyTemplates.get(&quot;AES128_GCM&quot;)); } catch (Exception e) {     e.printStackTrace(); } String keyString =keyToString(keyHandle); System.out.println(keyString); KeysetHandle fromString = stringToKey(keyString); </code></pre> <p>Output :</p> <pre><code>I/System.out: [-84, -19, 0, 5, 123, ...] I/System.out: [-84, -19, 0, 5, 123, ...] W/System.err: java.io.IOException: java.lang.IllegalStateException: Not a JSON Object: null         at com.google.crypto.tink.JsonKeysetReader.read(JsonKeysetReader.java:148)         at com.google.crypto.tink.CleartextKeysetHandle.read(CleartextKeysetHandle.java:58)         at com.ebenezer.testing.MainActivity.stringToKey(MainActivity.java:49)         at com.ebenezer.testing.MainActivity.onCreate(MainActivity.java:72)         at android.app.Activity.performCreate(Activity.java:7136)         at android.app.Activity.performCreate(Activity.java:7127)         at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1271) W/System.err:     at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2893) W/System.err:     at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3048) W/System.err:     at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:78)         at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:108)         at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:68) W/System.err:     at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1808)         at android.os.Handler.dispatchMessage(Handler.java:106)         at android.os.Looper.loop(Looper.java:193)         at android.app.ActivityThread.main(ActivityThread.java:6669)         at java.lang.reflect.Method.invoke(Native Method)         at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)         at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)     Caused by: java.lang.IllegalStateException: Not a JSON Object: null         at com.google.gson.JsonElement.getAsJsonObject(JsonElement.java:91)         at com.google.crypto.tink.JsonKeysetReader.read(JsonKeysetReader.java:145)         ... 18 more </code></pre> <p>I don't know why I am ending up with an error when I am trying to reconstruct a KeysetHandle object. Can someone please explain why this error is occuring or what I am doing wrong here?</p> ",NULL,2,NULL,2021-09-09 18:50:16.727,0,2021-09-09 18:50:16.727,NULL,NULL,0,11380610,0,1,0,<java><arrays><objectinputstream><tink>,How to convert Google Tink KeysetHandle to byte[ ] and back?,320
69242193,0,0,"<p>I am getting below error on building the release apk with R8 enabled:</p> <pre><code>Task :app:minifyReleaseWithR8 AGPBI: {&quot;kind&quot;:&quot;warning&quot;,&quot;text&quot;:&quot;Missing classes detected while running R8. Please add the missing classes or apply additional keep rules that are generated in C:\\Users\\y509118\\AndroidStudioProjects\\SafeBox\\app\\build\\outputs\\mapping\\release\\missing_rules.txt.\n&quot;,&quot;sources&quot;:[{}]} AGPBI: {&quot;kind&quot;:&quot;warning&quot;,&quot;text&quot;:&quot;Missing class com.google.errorprone.annotations.Immutable (referenced from: com.google.crypto.tink.KeyTemplate and 4 other contexts)&quot;,&quot;sources&quot;:[{}],&quot;tool&quot;:&quot;R8&quot;} Missing classes detected while running R8. Please add the missing classes or apply additional keep rules that are generated in C:\Users\y509118\AndroidStudioProjects\SafeBox\app\build\outputs\mapping\release\missing_rules.txt.   Missing class com.google.errorprone.annotations.Immutable (referenced from: com.google.crypto.tink.KeyTemplate and 4 other contexts) </code></pre> <p>content of above mentioned missing_rules file:</p> <pre><code># Please add these rules to your existing keep rules in order to suppress warnings. # This is generated automatically by the Android Gradle plugin.-dontwarn com.google.errorprone.annotations.Immutable </code></pre> <p>should I add <code>-dontwarn</code> in pro-guard rules and or add some <code>-keep</code> rule?</p> ",NULL,1,NULL,2021-09-19 09:57:14.843,0,2022-02-18 03:20:51.413,NULL,NULL,0,8268759,0,1,6,<android><proguard><android-r8><tink>,Missing class com.google.errorprone.annotations.Immutable on building release apk with R8,2845
69442684,0,1,"<p>I am using Google/Tink's Deterministic symmetric key encryption in my project. Like this-</p> <pre><code>byte[] ciphertext; Context context = getApplicationContext();         String plainText=&quot;Hello World&quot;; try {             DeterministicAeadConfig.register();         } catch (GeneralSecurityException e) {             e.printStackTrace();         } try {                     KeysetHandle keysetHandle = KeysetHandle.generateNew(                             KeyTemplates.get(&quot;AES256_SIV&quot;));                     Log.d(&quot;TAG&quot;,keysetHandle.toString());                     DeterministicAead daead =                             keysetHandle.getPrimitive(DeterministicAead.class);                     ciphertext = daead.encryptDeterministically(plainText.getBytes(),null);                     String c= new String(Base64.getEncoder().encodeToString(ciphertext));                     Log.d(&quot;TAG&quot;,c);                      MasterKey mainKey = new MasterKey.Builder(context)                             .setKeyScheme(MasterKey.KeyScheme.AES256_GCM)                             .build();                     Log.d(&quot;TAG&quot;,mainKey.toString());                      String filePath = Environment.getExternalStorageDirectory() + &quot;/my_keyset.json&quot;;                     String masterKeyUri = &quot;android-keystore://_androidx_security_master_key_&quot;;                     keysetHandle.write(JsonKeysetWriter.withFile(new File(filePath)),                             new AndroidKeystoreKmsClient().getAead(masterKeyUri));                  } catch (GeneralSecurityException | IOException e) {                     e.printStackTrace();                 } </code></pre> <p>Everything is okay. Now which master key I am creating for Android keyStore, can be deleted/lost if the user reset the phone or any other accident occur (other reasons). Then Tink's keyset(key) will be un-usable. <strong>Is there any way to keep backup of master key or create the master key from user input or any other solution?</strong></p> <p>Note: AWS KMS or GCP KMS isn't a solution for me. As a newcomer in cryptography, any suggestion/advice will be appreciated.</p> ",NULL,0,NULL,2021-10-04 21:41:00.780,0,2021-12-05 04:23:58.930,2021-10-05 04:14:01.197,NULL,16020235,15946000,0,1,1,<java><android><android-keystore><tink>,How to keep backup of Android Keystore's master key or create from user input?,615
69735151,69735549,1,"<p>I am currently working on a encryption and decryption service for my application, using Google Tink. <br> The problem is the following: I want to program it without using (nearly) duplicate code and  therefore I had the idea of using generics. <br> If parsing the Strings to a byte[] is the only option I will be doing that, but I'd rather not. <br> These are the methods &amp; variables:</p> <br> <p>The 3 Stacks I am using:</p> <pre><code>private Stack&lt;String&gt; plaintextAccInformation = new Stack&lt;&gt;(); private Stack&lt;byte[]&gt; encryptedAccInformation = new Stack&lt;&gt;(); private Stack&lt;String&gt; decryptedAccInformation = new Stack&lt;&gt;(); </code></pre> <br> The method, used to get the information from the Stack (which I wanted to solve with generics and also is not working). No. Parsing does not work, as the method has to be accessible with two different datatypes. <pre><code>private &lt;T&gt; Account getInformation(Stack&lt;T&gt; stack) {     boolean isApproved = stack.peek();     stack.pop();     boolean isAdmin = stack.peek();     stack.pop();     double balance = stack.peek();     stack.pop();     String password = stack.peek();     stack.pop();     String iBan = stack.peek();     stack.pop();     String uuid = stack.peek();     stack.pop();      return new Account(uuid, iBan, password, balance, isAdmin, isApproved); } </code></pre> <br> The method used to encrypt all the data of an Account object.<br>The idea is to iterate through the ```Stack plaintextAccInformation``` and encrypt every variable in the Account object and then save each encrypted variable to a new ```Stack encryptedAccInformation``` <pre><code>public Account encrypt(Account account) throws GeneralSecurityException {         this.plaintextAccInformation.empty();         this.encryptedAccInformation.empty();          agjEncryption = new AesGcmJce(key.getBytes());          this.plaintextAccInformation.push(account.getUuid());         this.plaintextAccInformation.push(account.getIban());         this.plaintextAccInformation.push(account.getPassword());         this.plaintextAccInformation.push(String.valueOf(account.getBalance()));         this.plaintextAccInformation.push(String.valueOf(account.isAdmin()));         this.plaintextAccInformation.push(String.valueOf(account.isApproved()));          Iterator&lt;String&gt; iterator = plaintextAccInformation.iterator();         while (iterator.hasNext()) {             encryptedAccInformation.push(agjEncryption.encrypt(plaintextAccInformation.peek().getBytes(), aad.getBytes()));             plaintextAccInformation.pop();         }          return getInformation(this.encryptedAccInformation);     } </code></pre> <br> The method used to decrypt the variables saved in the ```Stack  encryptedAccInformation``` and save it to the ```Stack decryptedAccInformation``` <pre><code>    public Account decrypt() throws GeneralSecurityException {         this.decryptedAccInformation.empty();          this.agjDecryption = new AesGcmJce(key.getBytes());          Iterator&lt;byte[]&gt; iterator2 = encryptedAccInformation.iterator();         while (iterator2.hasNext()) {             decryptedAccInformation.push(new String(agjDecryption.decrypt(encryptedAccInformation.peek(), aad.getBytes())));             encryptedAccInformation.pop();         }          return getInformation(this.decryptedAccInformation);     } </code></pre> ",NULL,2,NULL,2021-10-27 08:22:02.707,0,2021-10-27 08:50:38.340,NULL,NULL,0,14442758,0,1,0,<java><generics><encryption><stack><tink>,java: incompatible types: T cannot be converted to java.lang.String,602
69741011,0,0,"<p>I'd like to encrypt/decrypt column in BigQuery using <a href=""https://cloud.google.com/bigquery/docs/reference/standard-sql/aead_encryption_functions"" rel=""nofollow noreferrer"">AEAD functions</a>, however decryption fails with generic message:</p> <blockquote> <p>AEAD.DECRYPT_BYTES failed: decryption failed</p> </blockquote> <p>Here is the sample SQL:</p> <ul> <li>create CustomerData(customer_id, keyset, favorite_animal) table</li> <li>create EncryptedCustomerData(customer_id, encrypted_animal) and encrypt data</li> <li>select and decrypt data</li> </ul> <pre><code>WITH CustomerData AS ( SELECT 1 AS customer_id, KEYS.NEW_KEYSET('AEAD_AES_GCM_256') AS keyset, b'jaguar' AS favorite_animal UNION ALL SELECT 2 AS customer_id, KEYS.NEW_KEYSET('AEAD_AES_GCM_256') AS keyset, b'zebra' AS favorite_animal UNION ALL  SELECT 3 AS customer_id, KEYS.NEW_KEYSET('AEAD_AES_GCM_256') AS keyset, b'nautilus' AS favorite_animal), EncryptedCustomerData AS ( SELECT customer_id, AEAD.ENCRYPT(keyset, favorite_animal, CAST(CAST(customer_id AS STRING) AS BYTES)) AS encrypted_animal FROM CustomerData AS cd) SELECT   ecd.customer_id,   AEAD.DECRYPT_BYTES(     (SELECT cd.keyset FROM CustomerData AS cd WHERE ecd.customer_id = cd.customer_id),     ecd.encrypted_animal,     CAST(CAST(customer_id AS STRING) AS BYTES)   ) AS favorite_animal FROM EncryptedCustomerData AS ecd; </code></pre> <p>Could you point out the error?</p> ",NULL,0,NULL,2021-10-27 14:59:38.413,0,2021-10-27 15:16:26.403,2021-10-27 15:16:26.403,NULL,1648288,1648288,0,1,1,<encryption><google-cloud-platform><google-bigquery>,BigQuery AEAD encryption/decryption fails,912
70123140,70153226,1,"<p>we are currently getting our heads around gcp cloud kms and how to cater for disaster recovery. this is our current test setup:</p> <p>Java using Spring boot + Google Tink using KMSEnvelopeAead + AesGcmJce (i.e. generated DEK by tink that will be encrypted via kms (KEK) and stored alongside the ciphertext), symmetric</p> <ol> <li><p>project &quot;A&quot; (the initial project before disaster recovery)</p> <p>-&gt; KMS -&gt; keyring &quot;keyringABC&quot; -&gt; key &quot;keyABC&quot; -&gt; imported custom key via import job. i can successfully encrypt/decrypt some text - all fine, all good</p> </li> </ol> <pre><code>resource: projects/A/locations/eur3/keyRings/keyringABC/cryptoKeys/keyABC/cryptoKeyVersions/1 </code></pre> <ol start=""2""> <li><p>project &quot;B&quot; (the disaster recovery project) or same project &quot;A&quot; with a new key + keyring (names would be different)</p> <p>-&gt; KMS -&gt; keyring &quot;keyringABC&quot; -&gt; key &quot;keyABC&quot; -&gt; imported custom key via import job</p> <p>i reimport the custom key material that i already imported into project &quot;A&quot; before that was used to encrypt the data in project &quot;A&quot;. the newly created key mimics the same structure as in project &quot;A&quot;. the only difference is, that it resided in project &quot;B&quot;</p> </li> </ol> <pre><code>resource: projects/B/locations/eur3/keyRings/keyringABC/cryptoKeys/keyABC/cryptoKeyVersions/1 </code></pre> <p>Now, when i try to decrypt the data with the newly created key from project &quot;B&quot; that was encrypted in project &quot;A&quot; i does not work. looking into the cloud logging logs i can see the following error message</p> <pre><code>Decryption failed: verify that 'name' refers to the correct CryptoKey. </code></pre> <p>My assumption is (when reading the docs) that the ciphertext, in this case the DEK generated by tink via cloud kms, also contains the <em><strong>exact</strong></em> resource identifer pointing to the key of project &quot;A&quot; and hence the encrypted DEK can't be decrypted anymore when using the newly created key in project &quot;B&quot;. This would mean that there is no way to recover data in another project even if the underlying (imported) custom key material is the same.</p> <p>Can anybody shed some light on this? any help appreciated.</p> <p>cheers marcel</p> <p>PS: from the google kms docs</p> <blockquote> <p>when data is encrypted using a symmetric Cloud KMS or Cloud HSM key, extra metadata about the encryption key version is saved, encrypted, along with the encrypted data. This metadata is not present in data encrypted outside of Cloud KMS.</p> </blockquote> <p>and</p> <blockquote> <p>Symmetric keys will always have a primary version. This version is used for encrypting by default. When Cloud KMS performs decryption using symmetric keys, it automatically identifies which key version is needed to perform the decryption.</p> </blockquote> ",NULL,2,NULL,2021-11-26 10:42:12.383,0,2021-11-29 10:39:24.333,2021-11-26 11:20:35.443,NULL,14233806,14233806,0,1,1,<encryption><google-cloud-platform><google-cloud-kms><tink>,"GCP Cloud KMS - custom key, disaster recovery possible?",652
70895104,0,0,"<p>my current android application employs the <code>tink</code> library from google for encryption of data within my local database</p> <pre><code>   api 'com.google.crypto.tink:tink-android:1.6.1' </code></pre> <p>my app <code>gradle</code> resembles this:-</p> <p>android { compileSdkVersion 32 buildToolsVersion &quot;32.0.0&quot;</p> <pre><code>defaultConfig {     applicationId &quot;com.my.app&quot;     minSdkVersion 26     targetSdkVersion 32     versionCode 1     versionName &quot;1.0&quot;      testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot; } </code></pre> <p>my project <code>gradle</code> resembles this:-</p> <pre><code>buildscript {     ext.kotlin_version = &quot;1.6.10&quot;     repositories {         google()         mavenCentral()     }     dependencies {         classpath 'com.android.tools.build:gradle:7.1.0'         classpath &quot;org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version&quot;         classpath 'com.google.dagger:hilt-android-gradle-plugin:2.40.5'         classpath 'com.newrelic.agent.android:agent-gradle-plugin:6.3.1'     } } </code></pre> <p>today i have started seeing these errors and ive no idea what that they mean, if i need to be concerned by them, or how to resolve them</p> <pre><code>2022-01-28 13:53:24.682 14506-14548/com.my.app W/AndroidKeystoreAesGcm: encountered a potentially transient KeyStore error, will wait and retry     android.security.keystore.KeyPermanentlyInvalidatedException: Key permanently invalidated         at android.security.keystore2.KeyStoreCryptoOperationUtils.getInvalidKeyException(KeyStoreCryptoOperationUtils.java:123)         at android.security.keystore2.KeyStoreCryptoOperationUtils.getExceptionForCipherInit(KeyStoreCryptoOperationUtils.java:154)         at android.security.keystore2.AndroidKeyStoreCipherSpiBase.ensureKeystoreOperationInitialized(AndroidKeyStoreCipherSpiBase.java:339)         at android.security.keystore2.AndroidKeyStoreCipherSpiBase.engineInit(AndroidKeyStoreCipherSpiBase.java:171)         at javax.crypto.Cipher.tryTransformWithProvider(Cipher.java:2984)         at javax.crypto.Cipher.tryCombinations(Cipher.java:2891)         at javax.crypto.Cipher$SpiAndProviderUpdater.updateAndGetSpiAndProvider(Cipher.java:2796)         at javax.crypto.Cipher.chooseProvider(Cipher.java:773)         at javax.crypto.Cipher.init(Cipher.java:1143)         at javax.crypto.Cipher.init(Cipher.java:1084)         at com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.encryptInternal(AndroidKeystoreAesGcm.java:84)         at com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.encrypt(AndroidKeystoreAesGcm.java:68)         at com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient.validateAead(AndroidKeystoreKmsClient.java:248)         at com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient.getAead(AndroidKeystoreKmsClient.java:165)         at com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder.readOrGenerateNewMasterKey(AndroidKeysetManager.java:267)         at com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder.build(AndroidKeysetManager.java:236) </code></pre> <p>also this message</p> <pre><code>2022-01-28 13:53:24.741 14506-14548/com.my.app W/AndroidKeysetManager: cannot use Android Keystore, it'll be disabled     android.security.keystore.KeyPermanentlyInvalidatedException: Key permanently invalidated         at android.security.keystore2.KeyStoreCryptoOperationUtils.getInvalidKeyException(KeyStoreCryptoOperationUtils.java:123)         at android.security.keystore2.KeyStoreCryptoOperationUtils.getExceptionForCipherInit(KeyStoreCryptoOperationUtils.java:154)         at android.security.keystore2.AndroidKeyStoreCipherSpiBase.ensureKeystoreOperationInitialized(AndroidKeyStoreCipherSpiBase.java:339)         at android.security.keystore2.AndroidKeyStoreCipherSpiBase.engineInit(AndroidKeyStoreCipherSpiBase.java:171)         at javax.crypto.Cipher.tryTransformWithProvider(Cipher.java:2984)         at javax.crypto.Cipher.tryCombinations(Cipher.java:2891)         at javax.crypto.Cipher$SpiAndProviderUpdater.updateAndGetSpiAndProvider(Cipher.java:2796)         at javax.crypto.Cipher.chooseProvider(Cipher.java:773)         at javax.crypto.Cipher.init(Cipher.java:1143)         at javax.crypto.Cipher.init(Cipher.java:1084)         at com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.encryptInternal(AndroidKeystoreAesGcm.java:84)         at com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm.encrypt(AndroidKeystoreAesGcm.java:72)         at com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient.validateAead(AndroidKeystoreKmsClient.java:248)         at com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient.getAead(AndroidKeystoreKmsClient.java:165)         at com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder.readOrGenerateNewMasterKey(AndroidKeysetManager.java:267)         at com.google.crypto.tink.integration.android.AndroidKeysetManager$Builder.build(AndroidKeysetManager.java:236) </code></pre> <p>here is my <code>tink</code> code which resides in my android application class</p> <pre><code>  private fun manageTink() {         try {             AeadConfig.register()             authenticatedEncryption = generateNewKeysetHandle().getPrimitive(Aead::class.java)         } catch (e: GeneralSecurityException) {             throw RuntimeException(e)         } catch (e: IOException) {             throw RuntimeException(e)         }     }      @Throws(IOException::class, GeneralSecurityException::class)     private fun generateNewKeysetHandle(): KeysetHandle =         AndroidKeysetManager             .Builder()             .withSharedPref(this@MyApplication, TINK_KEYSET_NAME, PREF_FILE_NAME)             .withKeyTemplate(KeyTemplates.get(&quot;AES256_GCM&quot;))             .withMasterKeyUri(MASTER_KEY_URI)             .build()             .keysetHandle </code></pre> <p>do the above messages need addressing how do i resolve them what have i done wrong?</p> ",NULL,0,NULL,2022-01-28 14:09:56.783,0,2022-01-28 14:09:56.783,NULL,NULL,0,423199,0,1,5,<android><android-keystore><tink>,"What does exception signify AndroidKeystoreAesGcm: encountered a potentially transient KeyStore error, will wait and retry",1092
71029655,71029747,1,"<p>I have difficulties to decrypt payload with AES-256-CTR in Golang</p> <p>Format:</p> <pre><code>A zero IV. Not padded. </code></pre> <p>Input:</p> <pre><code>func main() { encryptedKey := []byte{196, 231, 38, 149, 234, 51, 142, 186, 230, 214, 96, 243, 229, 153, 103, 74, 117, 241, 237, 135, 91, 170, 216, 167, 235, 154, 180, 28, 125, 48, 82, 44} encryptedData := &quot;bj4hUUJtwIZJnnGYO+04JpIxf1Omnsrq+ilLv+eQXSEbvsEKgD9BZ0cnxGBrvd4KHeyHkoiZZbObDkZemFtQkgo0jw1AtscTv4HSIz9OeOFZmNjjA724dA8oyuHY8WWlFddXcArqv4R5a9DO2Qs4e9sk3KIRYn4OJH//lNi8t111J//wcsSTvuer+EO9XeQIZHsZ4sr+fhdU1Jxz7Z1KOM6c2MGuXAqfKj/ebn01XA/LgnaDO8xZ+k7vs19WY0pH33HM0K5K1C+XUVaRGhUtFt2BDgnG5T/MPIyVlfUpJpHJjEdsvTxTN7muK9UsbSonr3XAp9oV/w7xx65N5iEEjvC1CaehAnKOSM6QiyKs8KLiv2vHaabsNNusFZgHUZYUApErbpK9g3UR0744Sy8hVe/l75SmOofZvu59vU509MMc8TdqxssIv2g7JTw=&quot; plaintext, err := Decode(encryptedKey, encryptedData) if err != nil {     fmt.Errorf(&quot;an error occured while decrypting: %s&quot;, err.Error()) } fmt.Printf(&quot;in hex format: %x&quot;, plaintext) }  func Decode(encryptionKey []byte, encryptedData string) ([]byte, error) { ciphertext, err := base64.StdEncoding.DecodeString(encryptedData) if err != nil {     return nil, err } block, err := aes.NewCipher(encryptionKey) if err != nil {     return nil, err } iv := ciphertext[:aes.BlockSize] stream := cipher.NewCTR(block, iv) plaintext := make([]byte, len(ciphertext)-aes.BlockSize) stream.XORKeyStream(plaintext, ciphertext[aes.BlockSize:]) return plaintext, nil } </code></pre> <p>Output:</p> <p>15affcc3abb646bbf776136d0dc4a37c1e70c3433f9df8a9f7434b74992c25316d78405deffdbf964bb7e9229f9185b85bcf253bb3dcddb782872e018a1aed84414aaf5bc76af8d8accaf6137758d72322d09a7f56a9b57afc22a1b36cf84f24dc558b6654c69875cfb3b753c765794d22765b6f47f7a5c2b8a1822cbae4e2b66e8d413cdb5631a5a39fc435681bc139d01b06034faca8d7cc1677a4209f7e4fe9b746d7b530e54604a0cd2af2475837083823381626d9e3bfcaa6e531d9125ad851deb34c2d42363e3de5e3ac93bf66b3b2e506c57f1068c41c70a9dfe0d4d131f45ed6d2514a1ec273850c7a51982d31d0e68a785b5eceff141be88512b7eed66bb20d510bdc9ec12095c8e445699325c2cee9e52dec8e8e05359330bc946e6e5e5279acd84369394867d37b2002205f5883f4a281c9123ef6d1ab</p> <p>Expected output:</p> <p>7b226d65737361676545787069726174696f6e223a2231363434383331333036303037222c226d6573736167654964223a22414832456a74635157674c4f31364b415a702d316f6e5f353954386a58736f356135305064426f555f39664e737a396e763533376c6c52674e70345a4e4a5536754177714d7845646e50625a6c69753656666568665150366d514534326448544b4b5f6f6f765a74316a30796c6a7a424778424743326f7333655f33654b6f503463745a4b65694139767637222c227061796d656e744d6574686f64223a2243415244222c227061796d656e744d6574686f6444657461696c73223a7b2265787069726174696f6e59656172223a323032372c2265787069726174696f6e4d6f6e7468223a31322c2270616e223a2234313131313131313131313131313131222c22617574684d6574686f64223a2250414e5f4f4e4c59227d7d</p> <p>Sample <a href=""https://go.dev/play/p/g4cp--2vz5C"" rel=""nofollow noreferrer"">sandbox</a></p> ",NULL,1,NULL,2022-02-08 06:53:35.337,0,2022-02-08 07:02:31.810,NULL,NULL,0,18086661,0,1,0,<go><encryption><tink>,AES-256-CTR decryption in Golang,1573
71474373,0,1,"<p>Here is my code</p> <pre><code>KeysetHandle handle = KeysetHandle.generateNew(KeyTemplates.get(&quot;AES256_GCM&quot;)); Aead aead = handle.getPrimitive(Aead.class); </code></pre> <p>How can I get the byte /string representation of the key tha KeysetHandle uses here?</p> ",NULL,0,NULL,2022-03-14 21:18:52.663,0,2022-04-04 17:09:27.543,NULL,NULL,0,1164435,0,1,1,<java><cryptography><tink>,How to get string representation of Key from KeySetHandle/KeyTemplate in Google Tink,434
71718371,0,1,"<p>I got an issue with decrypting cookies that are stored in Chrome's sqlite db under <code>encrypted_value</code>.</p> <p>The extraction from the sqlite db works just fine:</p> <pre class=""lang-cs prettyprint-override""><code> // filePath = absolute cookies.sqlite path // query = &quot;SELECT creation_utc, host_key, name, encrypted_value, path, expires_utc from cookies WHERE host_key like \&quot;%&lt;target_site&gt;%\&quot;  using (var connection = new SqliteConnection($&quot;Data Source={filePath}&quot;)) {     connection.Open();      var command = connection.CreateCommand();     command.CommandText = query;      using (var reader = command.ExecuteReader())     {           while (reader.Read())           {                var creationTime = reader.GetString(0);                var host = reader.GetString(1);                var name = reader.GetString(2);                var value = reader.GetString(3);                var path = reader.GetString(4);                var expiryTime = reader.GetString(5);                  /* here the below code is placed */           }     }  } </code></pre> <p>however on decrypting the values I get a mismatch between the auth tag and the expected auth tag. Im running under windows.</p> <p>The below code is annoted with comments to show my reasoning</p> <pre class=""lang-cs prettyprint-override""><code>// get encrypted blob from row byte[] encryptedData = new byte[reader.GetBytes(3, 0, null, 0, int.MaxValue) - 1]; // 3 = encrypted_value column reader.GetBytes(3, 0, encryptedData, 0, encryptedData.Length);  // Get encrypted key from local state file: string encKey = File.ReadAllText(filePath + @&quot;/../../../Local State&quot;); encKey = JObject.Parse(encKey)[&quot;os_crypt&quot;][&quot;encrypted_key&quot;].ToString();  // The encrypted key starts with the ASCII encoding of DPAPI (i.e. 0x4450415049) and is Base64 encoded, // i.e. the key must first be Base64 decoded and the first 5 bytes must be removed. // Afterwards a decryption with win32crypt.CryptUnprotectData is possible. var decryptedKey = System.Security.Cryptography.ProtectedData.Unprotect(Convert.FromBase64String(encKey).Skip(5).ToArray(), null, System.Security.Cryptography.DataProtectionScope.LocalMachine);  // try decryption try {     // The encrypted data start with the ASCII encoding of v10 (i.e. 0x763130) ...     if (value.StartsWith(&quot;v10&quot;))     {         using (var aes = new System.Security.Cryptography.AesGcm(decryptedKey))         {             // ... followed by the 12 bytes nonce,             var nonce = encryptedData[3..15];             // the actual ciphertext              var encData = encryptedData[15..(encryptedData.Length - 16)];             // and finally the 16 bytes authentication tag.             var auth_tag = encryptedData[(encryptedData.Length - 16)..(encryptedData.Length)];              byte[] plaintextBytes = new byte[encData.Length];              aes.Decrypt(nonce, encData, auth_tag, plaintextBytes);             value = Encoding.UTF8.GetString(plaintextBytes);         }     }     else     {         // TODO         throw new Exception(&quot;[!] Cookie encrypted with DPAPI&quot;);     }                                      } catch (Exception e) {     Console.WriteLine(e);     Console.WriteLine($&quot;[*] Could not decode cookie with encrypted value {value}&quot;); }  </code></pre> <p>The exception I am getting is</p> <pre><code>System.Security.Cryptography.CryptographicException: The computed authentication tag did not match the input authentication tag. at System.Security.Cryptography.AesAEAD.Decrypt(SafeAlgorithmHandle algorithm, SafeKeyHandle keyHandle, ReadOnlySpan`1 nonce, ReadOnlySpan`1 associatedData, ReadOnlySpan`1 ciphertext, ReadOnlySpan`1 tag, Span`1 plaintext, Boolean clearPlaintextOnFailure) at System.Security.Cryptography.AesGcm.Decrypt(Byte[] nonce, Byte[] ciphertext, Byte[] tag, Byte[] plaintext, Byte[] associatedData) at &lt;REDACTED&gt;:line 123                                   </code></pre> <p>I am fairly certain that I got the parsing of the nonce, ciphertext and auth_tag right, but apparently not? I am not sure where this issue is coming from.</p> <p>Also, this is running under the same user/on the same browser that saved the cookies.</p> <p>Thanks in advance.</p> ",NULL,0,NULL,2022-04-02 14:25:19.880,0,2023-08-25 12:09:59.250,NULL,NULL,0,4996181,0,1,2,<c#><google-chrome><cookies><extract>,Decrypt Cookies (encrypted_value) from Chrome/Chromium 80+ in C# - Issue with Auth Tag,3223
72663402,0,0,"<p>I am tyring to make an api call to trade a code for an api access token using a client id and client secret to call the TinkOAuthApi. This was supposed to return an api access token to get a successful response. However, I am receving an the error message that is in the title. My code is below.</p> <pre><code>curl -v https://api.tink.com/api/v1/oauth/token ^                 -d 'code=50a8d556c64b4a29af74faf3dce38bf4' ^                 -d 'client_id=${a5bf840f7e2a44a58b20dab576bd18be}' ^                 -d 'client_secret=${5c04d2ce35bb483cb916dc520d0da8c0}' ^                 -d 'grant_type=authorization_code' </code></pre> ",NULL,1,NULL,2022-06-17 18:24:35.523,0,2022-06-17 18:24:35.523,NULL,NULL,0,12347411,0,1,1,<api><access-token><tink>,"When trying to make an API call i get the error,""errorMessage"" : ""No recognized authentication method was provided.""",263
72896376,0,0,"<p>I create a symmetric key in Cloud KMS and I used Python to encrypt some of the column in my CSV data (as a string by decoding the ciphertext).</p> <p>Then, I load this CSV file to a BQ table. I have an idea to decrypt the column using KMS via SQL and I found this document about column-level encryption from this <a href=""https://cloud.google.com/bigquery/docs/column-key-encrypt#use_cases"" rel=""nofollow noreferrer"">link</a></p> <p>But I am not sure that it only possible for the data that encrypted with the provided SQL function or not (seems like it)</p> <p>There are some field that I don't actually know whether to put something</p> <pre><code>DECLARE KMS_RESOURCE_NAME STRING; SET KMS_RESOURCE_NAME =&quot;gcp-kms://projects/&lt;project&gt;locations/&lt;location/keyRings/&lt;keyring&gt;/cryptoKeys/&lt;key&gt;&quot; ; select id , AEAD.DECRYPT_STRING(KEYS.KEYSET_CHAIN(     KMS_RESOURCE_NAME,     first_level_keyset,     name     additional_authenticated_data) FROM  mydataset.mytable </code></pre> <p>What actually I should put for <code>first_level_keyset </code> and <code>additional_authenticated_data</code> if I just need only to decrypt a pre-encrypted column that I did previously in CSV?</p> <p>Edit:</p> <p>The reason I have to encrypt data beforehand is because I store these data in my data lake in GCS first which I want it to be encrypted and no PII data in both GCS and BQ</p> ",NULL,0,NULL,2022-07-07 10:42:09.510,0,2022-07-07 10:54:10.793,2022-07-07 10:54:10.793,NULL,6714341,6714341,0,1,1,<sql><encryption><google-bigquery><google-cloud-kms>,Is it possible to decrypt an encrypted column in CSV loaded to BQ table with the same Cloud KMS key?,179
73160009,0,1,"<p>I am trying to use <code>tink</code> to encrypt data.</p> <p>My initialization routine is as follows:</p> <pre><code>        try {             AeadConfig.register();         } catch (GeneralSecurityException e) {             e.printStackTrace();         } </code></pre> <p>This is throwing an exception:</p> <pre><code>tried to access field com.google.protobuf.AbstractMessage.memoizedSize from class com.google.crypto.tink.proto.HmacKeyFormat java.lang.IllegalAccessError: tried to access field com.google.protobuf.AbstractMessage.memoizedSize from class com.google.crypto.tink.proto.HmacKeyFormat     at com.google.crypto.tink.proto.HmacKeyFormat.getSerializedSize(HmacKeyFormat.java:182)     at com.google.protobuf.AbstractMessageLite.toByteArray(AbstractMessageLite.java:62)     at com.google.crypto.tink.Registry.registerKeyTemplates(Registry.java:653)     at com.google.crypto.tink.Registry.registerKeyManager(Registry.java:556)     at com.google.crypto.tink.mac.HmacKeyManager.register(HmacKeyManager.java:232)     at com.google.crypto.tink.mac.MacConfig.register(MacConfig.java:86)     at com.google.crypto.tink.mac.MacConfig.init(MacConfig.java:74)     at com.google.crypto.tink.mac.MacConfig.&lt;clinit&gt;(MacConfig.java:59)     at com.google.crypto.tink.aead.AeadConfig.register(AeadConfig.java:102)     at com.google.crypto.tink.aead.AeadConfig.init(AeadConfig.java:86)     at com.google.crypto.tink.aead.AeadConfig.&lt;clinit&gt;(AeadConfig.java:68)     at com.zillow.kafka.message.MessageEncryptor.&lt;init&gt;(MessageEncryptor.java:24)     at com.zillow.kafka.message.MessageEncryptorTest.testSimple(MessageEncryptorTest.java:22)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:498)     at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)     at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)     at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)     at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)     at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)     at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)     at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)     at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)     at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)     at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)     at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)     at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)     at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)     at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)     at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)     at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)     at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)     at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)     at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)     at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)     at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)     at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)     at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)     at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)     at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)     at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)     at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) </code></pre> <p>here is my gradle</p> <pre><code>buildscript {     repositories {         jcenter()         mavenCentral()         maven {             url = &quot;https://packages.confluent.io/maven&quot;         }     }     dependencies {         classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'     } }  plugins {     id 'java' // so that we can use 'implementation', 'testImplementation' for dependencies }  apply plugin: 'com.github.johnrengelman.shadow'  repositories {     jcenter()     mavenCentral()     maven {         url = &quot;https://packages.confluent.io/maven&quot;     }     maven {         url = &quot;https://jitpack.io&quot;     } }  dependencies {      implementation 'org.apache.avro:avro:1.9.0'     implementation 'org.apache.avro:avro-tools:1.9.0'     // Kafka     implementation &quot;org.apache.kafka:kafka_2.12:2.2.0&quot;     implementation 'org.apache.avro:avro:1.9.0'     implementation 'io.confluent:kafka-schema-registry-client:6.2.1'     implementation 'io.confluent:kafka-avro-serializer:6.2.1'     implementation 'io.confluent:kafka-json-serializer:6.2.1'     implementation 'io.confluent:kafka-json-schema-provider:6.2.1'     implementation 'com.google.crypto.tink:tink:1.6.1'      //test     testImplementation(platform('org.junit:junit-bom:5.9.0'))     testImplementation('org.junit.jupiter:junit-jupiter') }  sourceSets {     main {         java {             srcDirs = [&quot;src/main/java&quot;]         }          resources {             srcDirs = [&quot;src/main/avro&quot;, &quot;src/main/resources&quot;]         }     }     test {         java {             srcDirs = [&quot;src/test/java&quot;]         }     } }  test {     useJUnitPlatform()     testLogging {         events &quot;passed&quot;, &quot;skipped&quot;, &quot;failed&quot;     } }  plugins.withId(&quot;com.github.johnrengelman.shadow&quot;){      //this block requires the java plugin to be applied first.     plugins.withId(&quot;java&quot;){          shadowJar {             //We are overriding the default jar to be the shadow jar             classifier = null             exclude 'META-INF'             exclude 'META-INF/*.INF'             exclude 'META-INF/license/*'         }          jar {             manifest {                 attributes(                         'Built-By'       : System.properties['user.name'],                         'Build-Timestamp': new java.text.SimpleDateFormat(&quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot;).format(new Date()),                         'Created-By'     : &quot;Gradle ${gradle.gradleVersion}&quot;,                         'Build-Jdk'      : &quot;${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})&quot;,                         'Build-OS'       : &quot;${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}&quot; ,                 )             }         }          tasks.build.dependsOn tasks.shadowJar         tasks.shadowJar.mustRunAfter tasks.jar     }   } </code></pre> <p>Any idea what I am doing wrong?</p> <p>[EDIT] I saw in a google search that somebody else hit the same problem, and it was due to a conflicting version of protobuf on the classpath. However, in my case there is no conflicting version. I verified using <code>gradle dependencies</code></p> <pre><code>+--- com.google.crypto.tink:tink:1.6.1 |    +--- com.google.protobuf:protobuf-java:3.14.0 |    \--- com.google.code.gson:gson:2.8.6 </code></pre> ",NULL,0,NULL,2022-07-28 22:58:37.490,0,2022-07-30 20:03:39.440,2022-07-29 01:14:30.030,NULL,170966,170966,0,1,1,<tink>,AeadConfig.register() throws exception,88
73561457,73562414,1,"<p>I'm working on a java project where bazel is being used. I'm looking to add tink java lib in bazel but looks like <code>com_github_google_tink</code> is not a valid package name.</p> <pre><code>java_library(     name = &quot;testlib&quot;,     srcs = glob([&quot;*.java&quot;]),     deps = [         &quot;@com_github_google_tink&quot;,     ],     visibility = [&quot;//visibility:public&quot;], )``` I already referred this article https://developers.google.com/tink/install-tink but it only talks about adding java deps in maven. Can someone help ?  </code></pre> ",NULL,0,NULL,2022-08-31 20:17:58.960,0,2022-08-31 22:12:16.333,NULL,NULL,0,6412106,0,1,0,<java><bazel><tink>,Add google tink java lib in bazel,59
73869378,0,0,"<p>Problem Statement : I would like write a BigQuery UDF to de·crypt table columns</p> <p>Setup :</p> <ul> <li>PII information is encrypted in table columns with tink package</li> <li>KEK (Key Encryption Key ) is sitting in KMS</li> <li>DEK (data encryption Key) is sitting in Cloud storage</li> <li>I have written BigQuery EXTERNAL Table to access DEK json i.e. <code>select encryptedKeyset from my_project.my_dataset.external_table_for_decrypted_keys</code> will give me required dek key</li> </ul> <p>This is my sample code</p> <pre><code>CREATE OR REPLACE FUNCTION my_proj.my_dataset.udf_decrypt_column(table_name string, column_name string) BEGIN  DECLARE KMS_RESOURCE_NAME STRING; DECLARE FIRST_LEVEL_KEYSET STRING; SET KMS_RESOURCE_NAME= &quot;gcp-kms://projects/dev/locations/us/keyRings/dev/cryptoKeys/dev-kek&quot;; SET FIRST_LEVEL_KEYSET =  (select encryptedKeyset from my_project.my_dataset.external_table_for_decrypted_keys`); SELECT AEAD.DECRYPT_STRING(KEYS.KEYSET_CHAIN(KMS_RESOURCE_NAME,     from_base64(FIRST_LEVEL_KEYSET)),    from_base64(column_name),    &quot;&quot;)  as decrypted_name FROM table_name </code></pre> <p>Issues/Question :</p> <ol> <li>Declare variables do not work in Functions (while they work in procedures). So my question is how to assign values to variables in UDF</li> <li>How to run SQL &amp; assign value to variable in UDF. In my case I want to fetch column encryptedKeyset from external_table_for_decrypted_keys &amp; assign to FIRST_LEVEL_KEYSET (in declare section)</li> </ol> <p>Any idea/pointer how to achieve this ? Thanks in advance for your reply.</p> ",NULL,0,NULL,2022-09-27 14:33:10.990,0,2022-09-27 14:33:10.990,NULL,NULL,0,10430120,0,1,0,<encryption><google-bigquery><bigquery-udf>,Writing BigQuery UDF to decrypt column data,338
74037397,0,0,"<p>I'm looking to write a function which takes in byte[] as an argument and converts it to tink keyset and I'm making use of BinaryKeysetReader.</p> <pre><code>public KeysetHandle convertKeyToTinkKeyset(byte[] keyVal) {                 try {                         ByteArrayInputStream byteInputStream = new ByteArrayInputStream(keyVal);                         DataInputStream dataInputStream = new DataInputStream(byteInputStream);                         KeysetHandle keyset = CleartextKeysetHandle.read(BinaryKeysetReader.withInputStream(dataInputStream));                                             return keyset;                 } catch (Exception e) {                                          }         }```  But for some reason its throwing the following error:  ```java.lang.NoSuchMethodError: com.google.protobuf.CodedInputStream.readStringRequireUtf8()Ljava/lang/String; </code></pre> <p>Not sure what I'm missing. I've already referred to this post: <a href=""https://stackoverflow.com/questions/69123367/how-to-convert-google-tink-keysethandle-to-byte-and-back"">How to convert Google Tink KeysetHandle to byte[ ] and back?</a></p> <p>Here's the bazel build file</p> <pre><code>java_library( name = &quot;&lt;&gt;&quot;, srcs = glob([&quot;*.java&quot;]), deps = [     &quot;@com_google_crypto_tink&quot;,     &quot;@com_google_protobuf_java_3_10_0&quot;, ], visibility = [&quot;//visibility:public&quot;], </code></pre> <p>)</p> ",NULL,0,NULL,2022-10-12 06:33:38.003,0,2022-10-12 17:21:47.550,2022-10-12 17:21:47.550,NULL,6412106,6412106,0,1,0,<java><tink>,Convert byte[] to google tink keyset,37
74058134,0,1,"<p>I would like to use Tink's envelope encription with Deterministic AEAD on GCP. I want to use it in python. I want to store a KEK key in GCP KMS and and encrypt the DEK key with it.</p> <p>There is an example how to use Deterministic AEAD, but it doesn't use envelop encryption: <a href=""https://developers.google.com/tink/deterministic-encryption"" rel=""nofollow noreferrer"">https://developers.google.com/tink/deterministic-encryption</a></p> <p>There is an example for envelop encryption, but it uses AEAD: <a href=""https://cloud.google.com/kms/docs/client-side-encryption"" rel=""nofollow noreferrer"">https://cloud.google.com/kms/docs/client-side-encryption</a></p> <p>But there is no example how to use Tink's envelope encription with Deterministic AEAD on GCP.</p> <p>Does somebody has an example for this scenario written in python?</p> ",NULL,0,NULL,2022-10-13 15:13:20.550,0,2022-10-14 15:03:24.963,NULL,NULL,0,20232730,0,1,0,<python><google-cloud-kms><tink>,How to use Tink's envelope encription with Deterministic AEAD on GCP with python?,189
74269065,0,0,"<p>I am trying to decrypt a google payment token using Python google-pay-token-decryption package following this link <a href=""https://github.com/yoyowallet/google-pay-token-decryption"" rel=""nofollow noreferrer"">https://github.com/yoyowallet/google-pay-token-decryption</a>. Currently I keep getting errors such as <strong>Could not verify message signature</strong> and <strong>Could not verify intermediate signing key signature</strong>. I tried changing all &quot;\u003d&quot; and &quot;\u003d&quot; in my token to &quot;=&quot; and still getting the same results. However, if I ignore the verification it will successfully decrypt. Does anyone know what these errors mean?</p> <pre><code>signingKey = [{&quot;keyValue&quot;:&quot;MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIsFro6K+IUxRr4yFTOTO+kFCCEvHo7B9IOMLxah6c977oFzX\/beObH4a9OfosMHmft3JJZ6B3xpjIb8kduK4\/A==&quot;,&quot;protocolVersion&quot;:&quot;ECv1&quot;},{&quot;keyValue&quot;:&quot;MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEGnJ7Yo1sX9b4kr4Aa5uq58JRQfzD8bIJXw7WXaap\/hVE+PnFxvjx4nVxt79SdRuUVeu++HZD0cGAv4IOznc96w==&quot;,&quot;protocolVersion&quot;:&quot;ECv2&quot;,&quot;keyExpiration&quot;:&quot;2154841200000&quot;},{&quot;keyValue&quot;:&quot;MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEGnJ7Yo1sX9b4kr4Aa5uq58JRQfzD8bIJXw7WXaap\/hVE+PnFxvjx4nVxt79SdRuUVeu++HZD0cGAv4IOznc96w==&quot;,&quot;protocolVersion&quot;:&quot;ECv2SigningOnly&quot;,&quot;keyExpiration&quot;:&quot;2154841200000&quot;}] recipient_id = &quot;merchant:12345678901234567890&quot; private_key = &quot;string&quot;  decryptor = GooglePayTokenDecryptor(signingKey, recipient_id, private_key) decrypted_token = decryptor.decrypt_token(token, False) </code></pre> <p>I've also tried the Tink library in Java and also getting Exceptions related to verifying signature.</p> <pre><code>Exception in thread &quot;main&quot; java.security.GeneralSecurityException: cannot verify signature     at com.google.crypto.tink.apps.paymentmethodtoken.PaymentMethodTokenRecipient.verify(PaymentMethodTokenRecipient.java:461)     at com.google.crypto.tink.apps.paymentmethodtoken.PaymentMethodTokenRecipient.verifyECV2(PaymentMethodTokenRecipient.java:399)     at com.google.crypto.tink.apps.paymentmethodtoken.PaymentMethodTokenRecipient.unsealECV2(PaymentMethodTokenRecipient.java:365)     at com.google.crypto.tink.apps.paymentmethodtoken.PaymentMethodTokenRecipient.unseal(PaymentMethodTokenRecipient.java:342)     at org.example.AeadExample.main(AeadExample.java:33) </code></pre> ",NULL,2,NULL,2022-10-31 21:00:03.183,0,2022-10-31 21:00:03.183,NULL,NULL,0,20382540,0,1,0,<encryption><google-pay><tink>,Google Pay decryption error: Could not verify intermediate signing key signature,330
74378917,0,0,"<p>I've gone with the approach of using a kms_aead_key template to generate a DEK with the key in KMS acting as the KEK and then writing the encrypted key out for use in BigQuery as a variable.</p> <p>I can’t seem to decrypt the DEK in BigQuery. It always fails with an error asking if I am referencing the right key which I’m sure I am.</p> <p><a href=""https://i.stack.imgur.com/N261R.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/N261R.png"" alt=""enter image description here"" /></a></p> <p>I’ve reproduced the problem in the script below. This script uses the same key_uri to encrypt in Python and decrypt in BigQuery, but I still get that error. I think the issue could be the format in which I am writing the key out and passing that to BQ, but I’m a little lost.</p> <p>To get the script to run I had to download the roots.pem file from <a href=""https://github.com/grpc/grpc/blob/master/etc/roots.pem"" rel=""nofollow noreferrer"">https://github.com/grpc/grpc/blob/master/etc/roots.pem</a></p> <p>A placed the roots.pem file in the same directory as my script.</p> <p>I then set this environment variable GRPC_DEFAULT_SSL_ROOTS_FILE_PATH=roots.pem</p> <p>If you can figure out what is wrong I would be very grateful.</p> <p>Thanks</p> <pre><code>import io import tink from tink import aead, cleartext_keyset_handle from tink.integration import gcpkms from google.cloud import bigquery  key_uri = 'gcp-kms://projects/PROJECT/locations/europe-west2/keyRings/KEY_RING/cryptoKeys/KEY_NAME'  aead.register() gcpkms.GcpKmsClient.register_client(key_uri=key_uri, credentials_path=&quot;&quot;)  template = aead.aead_key_templates.create_kms_aead_key_template(key_uri=key_uri) keyset_handle = tink.KeysetHandle.generate_new(template) kms_aead_primitive = keyset_handle.primitive(aead.Aead)  # Encrypt  encrypted_value = kms_aead_primitive.encrypt( plaintext='encrypt_me'.encode('utf-8'), associated_data='test'.encode('utf-8') )  out = io.BytesIO() writer = tink.BinaryKeysetWriter(out) cleartext_keyset_handle.write(writer, keyset_handle) out.seek(0) key = out.read()  # Decrypt in BigQuery  bq_client = bigquery.Client(location='europe-west2')  sql = f&quot;&quot;&quot; DECLARE kms_resource_name STRING; DECLARE first_level_keyset BYTES; DECLARE associated_data STRING;  SET kms_resource_name = '{key_uri}'; SET first_level_keyset = {key}; SET associated_data = 'test';  SELECT AEAD.DECRYPT_STRING( KEYS.KEYSET_CHAIN(kms_resource_name, first_level_keyset), {encrypted_value}, associated_data ) as Decrypt, &quot;&quot;&quot;  job_config = bigquery.QueryJobConfig( priority=bigquery.QueryPriority.BATCH )  job = bq_client.query(sql, job_config=job_config)  result = job.result() </code></pre> ",NULL,0,NULL,2022-11-09 17:21:02.533,0,2022-11-09 17:21:02.533,NULL,NULL,0,1052392,0,1,0,<google-cloud-platform><google-bigquery><google-cloud-kms><tink>,Import and use a Tink AEAD KMS key in BigQuery,202
74395132,0,0,"<p>Following is the code for generating cipher text using TINK :</p> <pre><code>keyset_handle = new_keyset_handle(aead.aead_key_templates.AES256_GCM) aead_primitive = keyset_handle.primitive(aead.Aead) ciphertext = aead_primitive.encrypt(encoded_data_message, encoded_id) #Encrypted Text out = io.BytesIO() writer = BinaryKeysetWriter(out) cleartext_keyset_handle.write(writer, keyset_handle) out.seek(0) key = base64.b64encode(out.read()) # Decryption Key for Encrypted Text </code></pre> <p>In bigquery, we are storing <strong>_id</strong> and corresponding to it we have a <strong>decryption_key</strong></p> <p>I want to utilize the existing <strong>decryption_key</strong> stored in a database(as Type STRING) which was previously generated for <strong>_id</strong>, to do the encryption of the new plain text string in python which has the same <strong>_id</strong>.</p> <p>I am unable to identify, how I can pass the existing Key as a value to encrypt the new data message in <em><strong>python</strong></em></p> <p>Thank you</p> ",NULL,0,NULL,2022-11-10 20:46:41.967,0,2022-11-10 20:46:41.967,NULL,NULL,0,12400319,0,1,0,<python><encryption><cryptography><aes-gcm><tink>,Utilizing an existing key to do encryption of plain text using TINK in python,178
74796753,0,0,"<p>We have a local historical data source that we want to decommission and move it to BigQuery for storage as well as for analyzing. There are some sensitive fields that we don’t want to be exposed but still want to keep them in BigQuery. We’ve read about the Column level encryption with Cloud KMS  in BigQuery and we see it fits for our purpose - we want to encrypt the sensitive fields in BigQuery. BigQuery offers the function</p> <pre><code>AEAD.ENCRYPT  </code></pre> <p>to encrypt data with Cloud KMS but we don’t want to move the sensitive data into BigQuery then do the encryption - instead we want to do the encryption at our side before we move the encrypted data into BigQuery that still be able to decrypt using BigQuery AEAD functions . Does anyone know if we can do that using Java or Python?</p> <p>From BigQuery documentation, they mentioned the keyset is in format google.crypto.tink.Keyset so it is somehow related to Google's tinkey library. Does anyone try it if it would work or if there are other ways?</p> ",NULL,0,NULL,2022-12-14 10:23:25.510,0,2022-12-16 10:03:39.997,NULL,NULL,0,20702006,0,1,1,<java><encryption><google-bigquery><data-quality>,Encryption in BigQuery,95
74942579,0,1,"<p>i recently started with C-Sharp and VS I'm creating a MAUI app for a school project On my Laptop the App works, but on my PC i get errors for the same Code. I have exactly the same libraries and SDKs on both machines and the App is a Maui preset. I didn't change any code</p> <pre><code>Severity    Code    Description Project File    Line    Suppression State Error   NU1101  Unable to find package Microsoft.NETCore.App.Runtime.win-x64. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages  ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Xamarin.AndroidX.Navigation.Fragment. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages   ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Xamarin.Google.Android.Material. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages    ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Xamarin.Google.Crypto.Tink.Android. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Xamarin.AndroidX.Navigation.Common. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Xamarin.AndroidX.Security.SecurityCrypto. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages   ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Microsoft.Extensions.DependencyInjection. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages   ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Xamarin.AndroidX.Lifecycle.LiveData. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages    ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Xamarin.Android.Glide. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages  ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Xamarin.AndroidX.Legacy.Support.V4. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Xamarin.AndroidX.Navigation.UI. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Microsoft.Extensions.Logging. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages   ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Xamarin.AndroidX.Browser. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages   ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Microsoft.Extensions.Logging.Abstractions. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages  ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Xamarin.AndroidX.Navigation.Runtime. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages    ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Microsoft.Extensions.Logging.Debug. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Microsoft.Extensions.Configuration. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Microsoft.Windows.SDK.BuildTools. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages   ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Microsoft.WindowsAppSDK. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages    ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Microsoft.Graphics.Win2D. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages   ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Microsoft.Windows.SDK.NET.Ref. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages  ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Microsoft.AspNetCore.App.Runtime.win-x64. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages   ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1    Error   NU1101  Unable to find package Microsoft.WindowsDesktop.App.Runtime.win-x64. No packages exist with this id in source(s): C:\Program Files\dotnet\library-packs, Microsoft Visual Studio Offline Packages   ThatsApp3   C:\Users\sebas\CloudDrive\Meine Dateien\001 Dev\C#\iet-322 Frontend\ThatsApp\ThatsApp3\ThatsApp3\ThatsApp3.csproj   1     </code></pre> <p>after launching maui-check (thanks to Robert Harvey and PMF) and auto-fix it i recieve this anwser</p> <pre><code>&gt; .NET SDK - Workloads (6.0.301) Checkup...   - android (Microsoft.NET.Sdk.Android.Manifest-6.0.300 : 32.0.440) installed.   - ios (Microsoft.NET.Sdk.iOS.Manifest-6.0.300 : 16.1.229) installed.   - maccatalyst (Microsoft.NET.Sdk.MacCatalyst.Manifest-6.0.400 : 16.1.229) installed.   - tvos (Microsoft.NET.Sdk.tvOS.Manifest-6.0.400 : 16.1.229) installed.   - macos (Microsoft.NET.Sdk.macOS.Manifest-6.0.400 : 13.0.784) installed.   - maui (Microsoft.NET.Sdk.Maui.Manifest-6.0.300 : 6.0.419) installed. ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────  - Congratulations, everything looks great! </code></pre> <p>but it is still not working.</p> ",NULL,6,NULL,2022-12-28 16:20:26.330,0,2022-12-29 01:18:36.253,2022-12-29 01:18:36.253,NULL,16764901,19735843,0,1,0,<c#><visual-studio><maui>,.Maui C# VS unable to find packages,567
74987790,0,0,"<p>When I try to decrypt ciphertext using streaming aead primitive as part of google tink, I get the following error: <code>java.io.IOException: No matching key found for the ciphertext in the stream</code></p> <p>Below is my code:</p> <pre><code>ByteBuffer buffer = ByteBuffer.allocate(1000); int bytesRead = 0;  StreamingAead saead = keysetHandle.getPrimitive(StreamingAead.class); ReadableByteChannel ciphertextSource = Channels.newChannel(new ByteArrayInputStream(ciphertext)); ReadableByteChannel decryptingChannel = saead.newDecryptingChannel(ciphertextSource, associatedData);  while(bytesRead &lt; 1000) {   bytesRead += decryptingChannel.read(buffer); } </code></pre> <p>The line where the error is shown is: <code>bytesRead += decryptingChannel.read(buffer)</code></p> <p>I've already referred <a href=""https://stackoverflow.com/questions/63093672/no-matching-key-found-for-the-ciphertext-in-the-stream-exception"">here</a> and <a href=""https://github.com/google/tink/issues/401"" rel=""nofollow noreferrer"">here</a> but the issue persists. I'm using tink version 1.6.0</p> ",NULL,0,NULL,2023-01-02 23:08:42.267,0,2023-01-02 23:08:42.267,NULL,NULL,0,6412106,0,1,0,<java><cryptography><tink>,Decryption using streaming AEAD (google tink),80
75450210,0,0,"<p>I am trying to build a library that uses the Google tink library and the AWS C++ SDK, but it fails with the following error:</p> <pre><code>Target &quot;tcc-tink&quot; links to target &quot;AWS::Crypto&quot; but the target was not found. Perhaps a find_package() call is missing for an IMPORTED target, or an ALIAS target is missing </code></pre> <p>The relevant AWS CMakeFile.txt seems to support targets of both &quot;crypto&quot; and &quot;AWS::crypto&quot;, although this file may be solely for its own use during a build:</p> <p><a href=""https://github.com/aws/aws-sdk-cpp/blob/main/cmake/Findcrypto.cmake"" rel=""nofollow noreferrer"">https://github.com/aws/aws-sdk-cpp/blob/main/cmake/Findcrypto.cmake</a></p> <p>I tried copying this file to an identical file named FindAWScrypto.cmake in the same AWS C++ SDK source directory, but that didn't work.</p> <p>I have also tried all kinds of combinations of <code>find_target()</code> and <code>add_library()</code>, to both my library's <code>CMakeLists.txt</code> (quoted below) and the above crypto file, all to no avail.</p> <p>What I <em>think</em> needs to happen is a directive added to my library's CMakeLists.txt to tell it that the reference is has to &quot;AWS::crypt&quot; is actually a reference to &quot;crypt&quot;, but nothing I try seems to work!</p> <p>It is also not clear where or how my code generates the reference to <code>AWS::crypt</code>!</p> <p>My <code>CMakeLists.txt</code> file comprises:</p> <pre><code>cmake_minimum_required(VERSION 3.5) project(tcc-tink CXX)  set(CMAKE_CXX_STANDARD 11) set(CMAKE_POSITION_INDEPENDENT_CODE ON)  add_subdirectory(tink)  find_package(AWSSDK REQUIRED COMPONENTS kms) add_library(tink-kms STATIC tink/cc/integration/awskms/aws_crypto.cc tink/cc/integration/awskms/aws_kms_aead.cc) target_include_directories(tink-kms PRIVATE &quot;${CMAKE_CURRENT_BINARY_DIR}/tink/__include_alias&quot;) target_include_directories(tink-kms PRIVATE &quot;${CMAKE_CURRENT_BINARY_DIR}/tink/__third_party/com_google_absl/src&quot;) target_include_directories(tink-kms PRIVATE &quot;${CMAKE_CURRENT_BINARY_DIR}/tink/__third_party/boringssl/src/src/include&quot;)  add_library(tcc-tink SHARED tcc_tink.cpp aws_kms_client.cpp dummy_kms_client.cpp) target_link_libraries(tcc-tink PUBLIC tink::static aws-cpp-sdk-kms tink-kms) </code></pre> ",NULL,2,NULL,2023-02-14 15:49:06.233,0,2023-02-14 16:42:10.787,2023-02-14 16:42:10.787,NULL,3440745,1477309,0,1,0,<amazon-web-services><cmake><tink>,How to use cmake to build a library with a link to another library aliased,75
75804896,0,0,"<p>Does Tink Library cache the keys? If I need to encrypt/decrypt a million records, does it make a GCP/KMS api call each time to fetch the key?</p> ",NULL,0,NULL,2023-03-21 18:06:58.613,0,2023-03-21 18:06:58.613,NULL,NULL,0,7742518,0,1,0,<tink>,Google Tink Library - Large Dataset encryption,28
76656706,0,1,"<p>I'm making a mobile 3D game called Ptaszory. I wanted to try to build the game for Android. I get errors. I have no clue what it means or what should I do.</p> <p>The unity Version I'm using is: 2021.3.24f1</p> <p>This is my External Tools setup:<a href=""https://i.stack.imgur.com/olXlS.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/olXlS.png"" alt=""enter image description here"" /></a></p> <p>My build settings: <a href=""https://i.stack.imgur.com/S6z8c.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/S6z8c.png"" alt=""enter image description here"" /></a></p> <p>My gradle and java: (not sure if this information is necessary here to solve the problem) <a href=""https://i.stack.imgur.com/4M2CY.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4M2CY.png"" alt=""enter image description here"" /></a></p> <p>THE ERROR: 1.</p> <p>`FAILURE: Build failed with an exception.</p> <ul> <li>What went wrong: A problem occurred configuring project ':launcher'.</li> </ul> <blockquote> <p>Could not resolve all artifacts for configuration ':launcher:classpath'. Could not resolve org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.72. Required by: project :launcher &gt; com.android.tools.build:gradle:4.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:aaptcompiler:4.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.lint:lint-gradle-api:27.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:gradle-api:4.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; androidx.databinding:databinding-compiler-common:4.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; com.android.tools:sdk-common:27.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; com.android.tools:common:27.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; com.android.tools.build:manifest-merger:27.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; com.android.tools.analytics-library:tracker:27.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; com.android.tools:sdklib:27.0.1 &gt; com.android.tools:repository:27.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; com.android.tools:sdk-common:27.0.1 &gt; com.android.tools.analytics-library:shared:27.0.1 &gt; Could not resolve org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.72. &gt; Could not get resource 'https://jcenter.bintray.com/org/jetbrains/kotlin/kotlin-stdlib-jdk8/1.3.72/kotlin-stdlib-jdk8-1.3.72.pom'. &gt; Could not GET 'https://jcenter.bintray.com/org/jetbrains/kotlin/kotlin-stdlib-jdk8/1.3.72/kotlin-stdlib-jdk8-1.3.72.pom'. &gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target Could not resolve org.ow2.asm:asm:7.0. Required by: project :launcher &gt; com.android.tools.build:gradle:4.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; Could not resolve org.ow2.asm:asm:7.0. &gt; Could not get resource 'https://jcenter.bintray.com/org/ow2/asm/asm/7.0/asm-7.0.pom'. &gt; Could not GET 'https://jcenter.bintray.com/org/ow2/asm/asm/7.0/asm-7.0.pom'. &gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target Could not resolve org.ow2.asm:asm-analysis:7.0. Required by: project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; Could not resolve org.ow2.asm:asm-analysis:7.0. &gt; Could not get resource 'https://jcenter.bintray.com/org/ow2/asm/asm-analysis/7.0/asm-analysis-7.0.pom'. &gt; Could not GET 'https://jcenter.bintray.com/org/ow2/asm/asm-analysis/7.0/asm-analysis-7.0.pom'. &gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target Could not resolve org.ow2.asm:asm-commons:7.0. Required by: project :launcher &gt; com.android.tools.build:gradle:4.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; Could not resolve org.ow2.asm:asm-commons:7.0. &gt; Could not get resource 'https://jcenter.bintray.com/org/ow2/asm/asm-commons/7.0/asm-commons-7.0.pom'. &gt; Could not GET 'https://jcenter.bintray.com/org/ow2/asm/asm-commons/7.0/asm-commons-7.0.pom'. &gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target Could not resolve org.ow2.asm:asm-util:7.0. Required by: project :launcher &gt; com.android.tools.build:gradle:4.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; Could not resolve org.ow2.asm:asm-util:7.0. &gt; Could not get resource 'https://jcenter.bintray.com/org/ow2/asm/asm-util/7.0/asm-util-7.0.pom'. &gt; Could not GET 'https://jcenter.bintray.com/org/ow2/asm/asm-util/7.0/asm-util-7.0.pom'. &gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target Could not resolve net.sf.jopt-simple:jopt-simple:4.9. Required by: project :launcher &gt; com.android.tools.build:gradle:4.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; Could not resolve net.sf.jopt-simple:jopt-simple:4.9. &gt; Could not get resource 'https://jcenter.bintray.com/net/sf/jopt-simple/jopt-simple/4.9/jopt-simple-4.9.pom'. &gt; Could not HEAD 'https://jcenter.bintray.com/net/sf/jopt-simple/jopt-simple/4.9/jopt-simple-4.9.pom'. &gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target Could not resolve net.sf.proguard:proguard-gradle:6.0.3. Required by: project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; Could not resolve net.sf.proguard:proguard-gradle:6.0.3. &gt; Could not get resource 'https://jcenter.bintray.com/net/sf/proguard/proguard-gradle/6.0.3/proguard-gradle-6.0.3.pom'. &gt; Could not GET 'https://jcenter.bintray.com/net/sf/proguard/proguard-gradle/6.0.3/proguard-gradle-6.0.3.pom'. &gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target Could not resolve com.google.protobuf:protobuf-java:3.10.0. Required by: project :launcher &gt; com.android.tools.build:gradle:4.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; com.android.tools:sdk-common:27.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; com.android.tools.analytics-library:protos:27.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; com.android.tools.analytics-library:tracker:27.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:aaptcompiler:4.0.1 &gt; com.android.tools.build:aapt2-proto:4.0.1-6197926 &gt; Could not resolve com.google.protobuf:protobuf-java:3.10.0. &gt; Could not get resource 'https://jcenter.bintray.com/com/google/protobuf/protobuf-java/3.10.0/protobuf-java-3.10.0.pom'. &gt; Could not GET 'https://jcenter.bintray.com/com/google/protobuf/protobuf-java/3.10.0/protobuf-java-3.10.0.pom'. &gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target Could not resolve com.google.protobuf:protobuf-java-util:3.10.0. Required by: project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; Could not resolve com.google.protobuf:protobuf-java-util:3.10.0. &gt; Could not get resource 'https://jcenter.bintray.com/com/google/protobuf/protobuf-java-util/3.10.0/protobuf-java-util-3.10.0.pom'. &gt; Could not GET 'https://jcenter.bintray.com/com/google/protobuf/protobuf-java-util/3.10.0/protobuf-java-util-3.10.0.pom'. &gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target Could not resolve com.google.crypto.tink:tink:1.3.0-rc2. Required by: project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; Could not resolve com.google.crypto.tink:tink:1.3.0-rc2. &gt; Could not get resource 'https://jcenter.bintray.com/com/google/crypto/tink/tink/1.3.0-rc2/tink-1.3.0-rc2.pom'. &gt; Could not GET 'https://jcenter.bintray.com/com/google/crypto/tink/tink/1.3.0-rc2/tink-1.3.0-rc2.pom'. &gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target Could not resolve com.squareup:javawriter:2.5.0. Required by: project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; Could not resolve com.squareup:javawriter:2.5.0. &gt; Could not get resource 'https://jcenter.bintray.com/com/squareup/javawriter/2.5.0/javawriter-2.5.0.pom'. &gt; Could not HEAD 'https://jcenter.bintray.com/com/squareup/javawriter/2.5.0/javawriter-2.5.0.pom'. &gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target Could not resolve org.bouncycastle:bcpkix-jdk15on:1.56. Required by: project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; com.android.tools:sdk-common:27.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; com.android.tools.build:apkzlib:4.0.1 &gt; Could not resolve org.bouncycastle:bcpkix-jdk15on:1.56. &gt; Could not get resource 'https://jcenter.bintray.com/org/bouncycastle/bcpkix-jdk15on/1.56/bcpkix-jdk15on-1.56.pom'. &gt; Could not GET 'https://jcenter.bintray.com/org/bouncycastle/bcpkix-jdk15on/1.56/bcpkix-jdk15on-1.56.pom'. &gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target Could not resolve org.bouncycastle:bcprov-jdk15on:1.56. Required by: project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; com.android.tools:sdk-common:27.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; com.android.tools.build:apkzlib:4.0.1 &gt; Could not resolve org.bouncycastle:bcprov-jdk15on:1.56. &gt; Could not get resource 'https://jcenter.bintray.com/org/bouncycastle/bcprov-jdk15on/1.56/bcprov-jdk15on-1.56.pom'. &gt; Could not GET 'https://jcenter.bintray.com/org/bouncycastle/bcprov-jdk15on/1.56/bcprov-jdk15on-1.56.pom'. &gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target Could not resolve org.ow2.asm:asm-tree:7.0. Required by: project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; Could not resolve org.ow2.asm:asm-tree:7.0. &gt; Could not get resource 'https://jcenter.bintray.com/org/ow2/asm/asm-tree/7.0/asm-tree-7.0.pom'. &gt; Could not GET 'https://jcenter.bintray.com/org/ow2/asm/asm-tree/7.0/asm-tree-7.0.pom'. &gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target Could not resolve javax.inject:javax.inject:1. Required by: project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; com.android.tools:sdk-common:27.0.1 &gt; Could not resolve javax.inject:javax.inject:1. &gt; Could not get resource 'https://jcenter.bintray.com/javax/inject/javax.inject/1/javax.inject-1.pom'. &gt; Could not HEAD 'https://jcenter.bintray.com/javax/inject/javax.inject/1/javax.inject-1.pom'. &gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target Could not resolve it.unimi.dsi:fastutil:7.2.0. Required by: project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; Could not resolve it.unimi.dsi:fastutil:7.2.0. &gt; Could not get resource 'https://jcenter.bintray.com/it/unimi/dsi/fastutil/7.2.0/fastutil-7.2.0.pom'. &gt; Could not GET 'https://jcenter.bintray.com/it/unimi/dsi/fastutil/7.2.0/fastutil-7.2.0.pom'. &gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target Could not resolve com.googlecode.json-simple:json-simple:1.1. Required by: project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; Could not resolve com.googlecode.json-simple:json-simple:1.1. &gt; Could not get resource 'https://jcenter.bintray.com/com/googlecode/json-simple/json-simple/1.1/json-simple-1.1.pom'. &gt; Could not GET 'https://jcenter.bintray.com/com/googlecode/json-simple/json-simple/1.1/json-simple-1.1.pom'. &gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target Could not resolve com.google.guava:guava:28.1-jre. Required by: project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:aaptcompiler:4.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.analytics-library:crash:27.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.lint:lint-gradle-api:27.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:gradle-api:4.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; androidx.databinding:databinding-compiler-common:4.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; com.android.tools:common:27.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; com.android.tools.analytics-library:tracker:27.0.1 project :launcher &gt; com.android.tools.build:gradle:4.0.1 &gt; com.android.tools.build:builder:4.0.1 &gt; com.android.tools:sdk-common:27.0.1 &gt; com.android.tools.analytics-library:shared:27.0.1 &gt; Could not resolve com.google.guava:guava:28.1-jre. &gt; Could not get resource 'https://jcenter.bintray.com/com/google/guava/guava/28.1-jre/guava-28.1-jre.pom'. &gt; Could not GET 'https://jcenter.bintray.com/com/google/guava/guava/28.1-jre/guava-28.1-jre.pom'. &gt; sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderExcepti`</p> </blockquote> <p>I tryied various versions of Gradle: 6.1.1, 8.2.1, 6.9.2.</p> ",NULL,6,NULL,2023-07-10 19:20:32.503,0,2023-07-11 09:50:53.323,NULL,NULL,0,19895388,0,1,0,<c#><android><unity-game-engine><gradle><build.gradle>,Unity C# Gradle Build Failed,112
